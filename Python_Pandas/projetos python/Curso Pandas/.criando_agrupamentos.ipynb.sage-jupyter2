{"backend_state":"running","connection_file":"/tmp/xdg-runtime-user/jupyter/kernel-b4e7233c-f248-4ce7-94af-e5b4fe83d456.json","kernel":"python3","kernel_error":"","kernel_state":"idle","kernel_usage":{"cpu":0,"memory":0},"trust":true,"type":"settings"}
{"cell_type":"markdown","exec_count":1,"id":"f568cd","input":"## Criando Agrupamentos","kernel":"python3","pos":1,"state":"done","type":"cell"}
{"cell_type":"markdown","exec_count":38,"id":"ce63d0","input":"## Fim","kernel":"python3","pos":24,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"05cf59","input":"#### Estatística Descritiva na Documentação do Pandas\nhttps://pandas.pydata.org/pandas-docs/stable/reference/groupby.html#computations-descriptive-stats","pos":6,"type":"cell"}
{"cell_type":"markdown","id":"12409e","input":"__OBS: Como desafio devemos calcular as descritivas para outras colunas também.__","pos":18.998046875,"type":"cell"}
{"cell_type":"markdown","id":"1c42ed","input":"#### 02 - Selecionando as estatísticas descritivas\n\nA criação de grupamentos com o método groupby() facilita bastante na sumarização das informações de um DataFrame. O método describe() aplicado a um grupamento gera um conjunto de estatísticas descritivas bastante útil no processo de análise de dados, conforme o exemplo abaixo:","pos":23.25,"type":"cell"}
{"cell_type":"markdown","id":"20d3dd","input":"Como devemos proceder para obter um DataFrame com as notas médias dos alunos, com duas casas decimais, segundo seu sexo?","pos":22,"type":"cell"}
{"cell_type":"markdown","id":"47c259","input":"__Se nós não tivéssemos escolhido apenas alguns bairros para retornar a estatística descritiva, a dificuldade de visualizar aqui seria enorme.   \nTeríamos que salvar outro DataFrame para visualizar em uma análise mais detalhada criando mais um notebook.   \nFica difícil enconrar problemas nos dados muito volumosos, como estão aqui.__","pos":18.90625,"type":"cell"}
{"cell_type":"markdown","id":"4d8c6f","input":"## Análises Gráficas: Matplotlib","pos":18.9375,"type":"cell"}
{"cell_type":"markdown","id":"5f6564","input":"#### 01 - Sumarizando informações\n\nConsidere o seguinte DataFrame para responder o exercício abaixo:","pos":20,"type":"cell"}
{"cell_type":"markdown","id":"6ffc3d","input":"__O método aggregate() permite selecionar um conjunto de estatísticas personalizado.    \nÉ possível declarar o método de forma simplificada, utilizando agg().__","pos":23.9375,"type":"cell"}
{"cell_type":"markdown","id":"7c4b34","input":"## Exercícios","pos":19,"type":"cell"}
{"cell_type":"markdown","id":"8a2497","input":"# Relatório de Análise 7","pos":0,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"aea1ca","input":"Descobriremos por meio do método type() que essa variável é do tipo DataFrameGroupBy.   \nTemos uma propriedade chamada groups, que consiste em um dicionário em que a chave é variável    \nutilizada como indexador e os índices em que os registros de bairro foram encontrados.   \nDessa forma, é criada uma indexação do nosso DataFrame para facilitar consultas e crianção de tabelas.\n\n__Faremos um laço e exibiremos os bairros:__","pos":13,"type":"cell"}
{"cell_type":"markdown","id":"c469c1","input":"Utilizando o DataFrame (precos) acima, que código seria necessário para gerar a visualização abaixo:\n```\nProduto\tMédia\tDesvio Padrão\tMínimo\tMáximo\nCebola\t3.96\t0.26\t3.69\t4.2\nTomate\t2.06\t0.41\t1.69\t2.5\nBatata\t3.43\t0.52\t2.99\t4.0\n```","pos":23.75,"type":"cell"}
{"cell_type":"markdown","id":"e2a266","input":"## Estatísticas Descritivas","pos":18.25,"type":"cell"}
{"cell_type":"markdown","id":"ffa368","input":"Rapidamente perceberemos alguns problemas: percebmos que o desvio padrão(std) apresenta uma    \nvariação muito grande no caso de Botafogo, o mesmo ocorre para Barra da Tijuca.    \nNo caso de valor máximo, perceberemos valores estranhos também; segundo a tabela, existem imóveis    \ndisponíveis em em Botafogo com a locação de 4500000.0.\n\nEssas informações estão errôneas, muito provavelmente esses valores correspondem à venda e     \nnão à locação.\n\n<font color='brown'>__Para solucionar essa questão. Coletaremos a variável Valor, e em seguida utilizaremos    \n    o método aggregate() que receberá como parâmetro o conjunto de estatísticas que nos interessam.__</font>","pos":18.75,"type":"cell"}
{"end":1627010831753,"exec_count":21,"id":"1e5111","input":"import pandas as pd","kernel":"python3","pos":2,"start":1627010831748,"state":"done","type":"cell"}
{"end":1627010831788,"exec_count":22,"id":"15124b","input":"dados = pd.read_csv('dados/aluguel_residencial.csv', sep = ';')","kernel":"python3","pos":3,"start":1627010831757,"state":"done","type":"cell"}
{"end":1627010831809,"exec_count":23,"id":"20ee3e","input":"dados.head(10)","kernel":"python3","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Tipo</th>\n      <th>Bairro</th>\n      <th>Quartos</th>\n      <th>Vagas</th>\n      <th>Suites</th>\n      <th>Area</th>\n      <th>Valor</th>\n      <th>Condominio</th>\n      <th>IPTU</th>\n      <th>Valor por m²</th>\n      <th>Tipo Agregado</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Quitinete</td>\n      <td>Copacabana</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>40</td>\n      <td>1700.0</td>\n      <td>500.0</td>\n      <td>60.0</td>\n      <td>42.50</td>\n      <td>Apartamento</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Casa</td>\n      <td>Jardim Botânico</td>\n      <td>2</td>\n      <td>0</td>\n      <td>1</td>\n      <td>100</td>\n      <td>7000.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>70.00</td>\n      <td>Casa</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Apartamento</td>\n      <td>Centro</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>15</td>\n      <td>800.0</td>\n      <td>390.0</td>\n      <td>20.0</td>\n      <td>53.33</td>\n      <td>Apartamento</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Apartamento</td>\n      <td>Higienópolis</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>48</td>\n      <td>800.0</td>\n      <td>230.0</td>\n      <td>0.0</td>\n      <td>16.67</td>\n      <td>Apartamento</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>Apartamento</td>\n      <td>Cachambi</td>\n      <td>2</td>\n      <td>0</td>\n      <td>0</td>\n      <td>50</td>\n      <td>1300.0</td>\n      <td>301.0</td>\n      <td>17.0</td>\n      <td>26.00</td>\n      <td>Apartamento</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>Casa de Condomínio</td>\n      <td>Barra da Tijuca</td>\n      <td>5</td>\n      <td>4</td>\n      <td>5</td>\n      <td>750</td>\n      <td>22000.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>29.33</td>\n      <td>Casa</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>Casa de Condomínio</td>\n      <td>Ramos</td>\n      <td>2</td>\n      <td>2</td>\n      <td>0</td>\n      <td>65</td>\n      <td>1000.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>15.38</td>\n      <td>Casa</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>Apartamento</td>\n      <td>Grajaú</td>\n      <td>2</td>\n      <td>1</td>\n      <td>0</td>\n      <td>70</td>\n      <td>1500.0</td>\n      <td>642.0</td>\n      <td>74.0</td>\n      <td>21.43</td>\n      <td>Apartamento</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>Apartamento</td>\n      <td>Lins de Vasconcelos</td>\n      <td>3</td>\n      <td>1</td>\n      <td>1</td>\n      <td>90</td>\n      <td>1500.0</td>\n      <td>455.0</td>\n      <td>14.0</td>\n      <td>16.67</td>\n      <td>Apartamento</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>Apartamento</td>\n      <td>Copacabana</td>\n      <td>1</td>\n      <td>0</td>\n      <td>1</td>\n      <td>40</td>\n      <td>2000.0</td>\n      <td>561.0</td>\n      <td>50.0</td>\n      <td>50.00</td>\n      <td>Apartamento</td>\n    </tr>\n  </tbody>\n</table>\n</div>","text/plain":"                 Tipo               Bairro  Quartos  Vagas  Suites  Area  \\\n0           Quitinete           Copacabana        1      0       0    40   \n1                Casa      Jardim Botânico        2      0       1   100   \n2         Apartamento               Centro        1      0       0    15   \n3         Apartamento         Higienópolis        1      0       0    48   \n4         Apartamento             Cachambi        2      0       0    50   \n5  Casa de Condomínio      Barra da Tijuca        5      4       5   750   \n6  Casa de Condomínio                Ramos        2      2       0    65   \n7         Apartamento               Grajaú        2      1       0    70   \n8         Apartamento  Lins de Vasconcelos        3      1       1    90   \n9         Apartamento           Copacabana        1      0       1    40   \n\n     Valor  Condominio  IPTU  Valor por m² Tipo Agregado  \n0   1700.0       500.0  60.0         42.50   Apartamento  \n1   7000.0         0.0   0.0         70.00          Casa  \n2    800.0       390.0  20.0         53.33   Apartamento  \n3    800.0       230.0   0.0         16.67   Apartamento  \n4   1300.0       301.0  17.0         26.00   Apartamento  \n5  22000.0         0.0   0.0         29.33          Casa  \n6   1000.0         0.0   0.0         15.38          Casa  \n7   1500.0       642.0  74.0         21.43   Apartamento  \n8   1500.0       455.0  14.0         16.67   Apartamento  \n9   2000.0       561.0  50.0         50.00   Apartamento  "},"exec_count":23}},"pos":4,"start":1627010831802,"state":"done","type":"cell"}
{"end":1627010831822,"exec_count":24,"id":"4f1bd4","input":"dados['Valor'].mean()","kernel":"python3","output":{"0":{"data":{"text/plain":"5046.172821405663"},"exec_count":24}},"pos":5,"start":1627010831814,"state":"done","type":"cell"}
{"end":1627010831839,"exec_count":25,"id":"11c2db","input":"# Criando um novo DataFrame usando isin()\n\"\"\"\nRelembrando: isin() retorna Series booleanas indicando se os valores estão ou não contidos em seleção prévia.\n\nO resultado só será verdadeiro em um local se todos os os rótulos correspondem.\nSe os valores forem uma série, esse é o índice.\nSe valores é um dicionário, as chaves devem ser os nomes das colunas, que deve corresponder.\nSe os valores forem um DataFrame, então, os rótulos do índice e da coluna devem corresponder.\n\n\"\"\"\nbairros = ['Barra da Tijuca', 'Copacabana', 'Ipanema', 'Leblon', 'Botafogo', 'Flamengo', 'Tijuca']\nselecao = dados['Bairro'].isin(bairros)\ndados = dados[selecao]","kernel":"python3","pos":7,"start":1627010831827,"state":"done","type":"cell"}
{"end":1627010831856,"exec_count":26,"id":"49882e","input":"dados['Bairro'].drop_duplicates()","kernel":"python3","output":{"0":{"data":{"text/plain":"0          Copacabana\n5     Barra da Tijuca\n15             Tijuca\n19            Ipanema\n23           Botafogo\n27             Leblon\n78           Flamengo\nName: Bairro, dtype: object"},"exec_count":26}},"pos":8,"start":1627010831844,"state":"done","type":"cell"}
{"end":1627010831891,"exec_count":27,"id":"110e3a","input":"type(selecao)","kernel":"python3","output":{"0":{"data":{"text/plain":"pandas.core.series.Series"},"exec_count":27}},"pos":9,"start":1627010831882,"state":"done","type":"cell"}
{"end":1627010831906,"exec_count":28,"id":"8e3cdd","input":"# Criando um grupo com base nos Bairros pré-definidos\ngrupo_bairro = dados.groupby('Bairro')","kernel":"python3","pos":10,"start":1627010831896,"state":"done","type":"cell"}
{"end":1627010831923,"exec_count":29,"id":"bc254b","input":"type(grupo_bairro)","kernel":"python3","output":{"0":{"data":{"text/plain":"pandas.core.groupby.generic.DataFrameGroupBy"},"exec_count":29}},"pos":11,"start":1627010831909,"state":"done","type":"cell"}
{"end":1627010831943,"exec_count":30,"id":"de38ee","input":"grupo_bairro.groups","kernel":"python3","output":{"0":{"data":{"text/plain":"{'Barra da Tijuca': [5, 14, 16, 21, 30, 32, 35, 42, 43, 60, 61, 64, 68, 74, 79, 93, 107, 110, 112, 117, 130, 132, 136, 150, 153, 155, 165, 166, 173, 186, 189, 207, 214, 221, 224, 233, 236, 239, 244, 259, 265, 274, 276, 291, 292, 293, 295, 302, 308, 311, 325, 335, 336, 345, 360, 366, 368, 374, 380, 387, 389, 400, 412, 432, 433, 435, 436, 439, 449, 451, 462, 463, 465, 473, 476, 484, 494, 500, 503, 511, 537, 538, 539, 540, 543, 547, 552, 554, 555, 556, 584, 587, 588, 590, 594, 596, 601, 611, 622, 630, ...], 'Botafogo': [23, 48, 87, 88, 111, 119, 127, 134, 196, 200, 225, 334, 362, 415, 416, 498, 524, 526, 545, 593, 649, 685, 719, 756, 765, 822, 827, 861, 915, 924, 928, 1006, 1043, 1080, 1091, 1110, 1116, 1127, 1140, 1165, 1201, 1205, 1223, 1250, 1282, 1295, 1304, 1317, 1348, 1383, 1414, 1419, 1455, 1517, 1529, 1579, 1630, 1655, 1670, 1699, 1741, 1742, 1788, 1814, 1823, 1826, 1853, 1922, 1931, 1957, 1972, 1981, 1989, 2029, 2066, 2069, 2081, 2083, 2084, 2088, 2097, 2148, 2149, 2165, 2179, 2197, 2242, 2247, 2297, 2352, 2381, 2396, 2413, 2431, 2433, 2470, 2509, 2519, 2532, 2580, ...], 'Copacabana': [0, 9, 10, 11, 24, 25, 28, 31, 86, 91, 104, 109, 125, 129, 140, 142, 143, 151, 162, 174, 184, 192, 194, 206, 223, 249, 263, 275, 278, 281, 289, 290, 301, 307, 319, 327, 329, 348, 359, 365, 371, 372, 388, 396, 404, 425, 426, 437, 458, 460, 485, 486, 487, 497, 530, 532, 534, 557, 564, 573, 574, 583, 606, 610, 612, 615, 633, 650, 659, 666, 667, 678, 687, 689, 694, 701, 713, 730, 736, 739, 772, 808, 824, 836, 872, 881, 894, 898, 907, 912, 917, 919, 921, 922, 929, 952, 963, 964, 980, 989, ...], 'Flamengo': [78, 138, 218, 284, 321, 347, 356, 361, 369, 393, 421, 430, 442, 477, 544, 580, 620, 669, 726, 764, 795, 855, 886, 891, 900, 943, 967, 1044, 1099, 1128, 1137, 1209, 1234, 1241, 1359, 1397, 1400, 1507, 1513, 1525, 1536, 1546, 1555, 1602, 1605, 1680, 1696, 1760, 1763, 1834, 1844, 1872, 1940, 1973, 2005, 2010, 2035, 2218, 2227, 2264, 2274, 2311, 2334, 2362, 2374, 2426, 2461, 2529, 2530, 2539, 2542, 2567, 2594, 2626, 2637, 2702, 2710, 2715, 2773, 2777, 2863, 2877, 2920, 2937, 2955, 2975, 3036, 3087, 3102, 3127, 3129, 3138, 3175, 3259, 3284, 3317, 3393, 3399, 3411, 3420, ...], 'Ipanema': [19, 39, 40, 45, 52, 53, 73, 84, 92, 114, 121, 128, 141, 159, 177, 179, 216, 217, 230, 242, 245, 269, 283, 326, 338, 341, 370, 377, 386, 392, 405, 444, 482, 489, 515, 523, 535, 569, 575, 576, 577, 579, 589, 591, 614, 624, 628, 647, 648, 656, 671, 681, 690, 708, 710, 717, 725, 729, 731, 746, 747, 753, 757, 779, 783, 792, 800, 810, 812, 816, 829, 859, 860, 877, 888, 905, 906, 923, 927, 938, 951, 953, 970, 983, 985, 994, 1001, 1010, 1022, 1027, 1033, 1049, 1050, 1052, 1054, 1058, 1060, 1078, 1086, 1092, ...], 'Leblon': [27, 59, 90, 97, 115, 133, 161, 167, 171, 213, 219, 248, 314, 315, 324, 352, 353, 395, 407, 420, 443, 448, 459, 464, 466, 470, 490, 496, 501, 509, 519, 550, 597, 599, 603, 639, 640, 658, 686, 703, 711, 733, 749, 775, 784, 819, 828, 833, 834, 839, 843, 868, 874, 899, 931, 933, 945, 959, 965, 1053, 1059, 1069, 1070, 1072, 1075, 1088, 1104, 1142, 1155, 1161, 1166, 1193, 1204, 1207, 1214, 1216, 1236, 1278, 1279, 1284, 1301, 1302, 1336, 1338, 1346, 1368, 1408, 1411, 1415, 1428, 1503, 1526, 1540, 1547, 1552, 1560, 1587, 1590, 1622, 1623, ...], 'Tijuca': [15, 18, 20, 80, 82, 126, 145, 149, 158, 164, 176, 180, 182, 185, 197, 202, 258, 337, 342, 354, 363, 438, 450, 469, 479, 504, 513, 527, 565, 568, 598, 600, 627, 636, 637, 653, 674, 738, 743, 744, 762, 776, 788, 791, 794, 796, 811, 838, 841, 851, 871, 875, 885, 925, 947, 968, 974, 987, 990, 1020, 1031, 1038, 1061, 1119, 1178, 1181, 1198, 1263, 1277, 1372, 1431, 1435, 1457, 1479, 1530, 1534, 1563, 1565, 1574, 1581, 1634, 1638, 1658, 1679, 1702, 1704, 1718, 1729, 1751, 1778, 1782, 1790, 1820, 1830, 1831, 1836, 1867, 1877, 1900, 1911, ...]}"},"exec_count":30}},"pos":12,"start":1627010831927,"state":"done","type":"cell"}
{"end":1627010831988,"exec_count":31,"id":"950c11","input":"for bairro, dados in grupo_bairro:\n    print(bairro)","kernel":"python3","output":{"0":{"name":"stdout","text":"Barra da Tijuca\nBotafogo\nCopacabana\nFlamengo\nIpanema\nLeblon\nTijuca\n"}},"pos":14,"start":1627010831982,"state":"done","type":"cell"}
{"end":1627010832006,"exec_count":32,"id":"bf99d7","input":"for bairro, dados in grupo_bairro:\n    print(type(dados))","kernel":"python3","output":{"0":{"name":"stdout","text":"<class 'pandas.core.frame.DataFrame'>\n<class 'pandas.core.frame.DataFrame'>\n<class 'pandas.core.frame.DataFrame'>\n<class 'pandas.core.frame.DataFrame'>\n<class 'pandas.core.frame.DataFrame'>\n<class 'pandas.core.frame.DataFrame'>\n<class 'pandas.core.frame.DataFrame'>\n"}},"pos":15,"start":1627010831993,"state":"done","type":"cell"}
{"end":1627010832023,"exec_count":33,"id":"960ba9","input":"for bairro, data in grupo_bairro:\n    print(f'{bairro} -> {dados.Valor.mean()}') # poderia ser dados['Valor'].mean() também","kernel":"python3","output":{"0":{"name":"stdout","text":"Barra da Tijuca -> 2043.52\nBotafogo -> 2043.52\nCopacabana -> 2043.52\nFlamengo -> 2043.52\nIpanema -> 2043.52\nLeblon -> 2043.52\nTijuca -> 2043.52\n"}},"pos":16,"start":1627010832010,"state":"done","type":"cell"}
{"end":1627010832038,"exec_count":34,"id":"47ba61","input":"grupo_bairro['Valor'].mean()","kernel":"python3","output":{"0":{"data":{"text/plain":"Bairro\nBarra da Tijuca    7069.552938\nBotafogo           8791.828179\nCopacabana         4126.677005\nFlamengo           4113.526611\nIpanema            9352.001134\nLeblon             8746.344992\nTijuca             2043.520000\nName: Valor, dtype: float64"},"exec_count":34}},"pos":17,"start":1627010832026,"state":"done","type":"cell"}
{"end":1627010832197,"exec_count":35,"id":"72b51f","input":"grupo_bairro[['Valor', 'Condominio']].mean().round(2)","kernel":"python3","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Valor</th>\n      <th>Condominio</th>\n    </tr>\n    <tr>\n      <th>Bairro</th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>Barra da Tijuca</th>\n      <td>7069.55</td>\n      <td>3591.01</td>\n    </tr>\n    <tr>\n      <th>Botafogo</th>\n      <td>8791.83</td>\n      <td>976.28</td>\n    </tr>\n    <tr>\n      <th>Copacabana</th>\n      <td>4126.68</td>\n      <td>1148.68</td>\n    </tr>\n    <tr>\n      <th>Flamengo</th>\n      <td>4113.53</td>\n      <td>1102.15</td>\n    </tr>\n    <tr>\n      <th>Ipanema</th>\n      <td>9352.00</td>\n      <td>2244.44</td>\n    </tr>\n    <tr>\n      <th>Leblon</th>\n      <td>8746.34</td>\n      <td>2107.18</td>\n    </tr>\n    <tr>\n      <th>Tijuca</th>\n      <td>2043.52</td>\n      <td>711.69</td>\n    </tr>\n  </tbody>\n</table>\n</div>","text/plain":"                   Valor  Condominio\nBairro                              \nBarra da Tijuca  7069.55     3591.01\nBotafogo         8791.83      976.28\nCopacabana       4126.68     1148.68\nFlamengo         4113.53     1102.15\nIpanema          9352.00     2244.44\nLeblon           8746.34     2107.18\nTijuca           2043.52      711.69"},"exec_count":35}},"pos":18,"start":1627010832041,"state":"done","type":"cell"}
{"end":1627010832219,"exec_count":36,"id":"ec0e54","input":"import pandas as pd\nalunos = pd.DataFrame({'Nome': ['Ary', 'Cátia', 'Denis', 'Beto', 'Bruna', 'Dara', 'Carlos', 'Alice'],\n                        'Sexo': ['M', 'F', 'M', 'M', 'F', 'F', 'M', 'F'],\n                        'Idade': [15, 27, 56, 32, 42, 21, 19, 35],\n                        'Notas': [7.5, 2.5, 5.0, 10, 8.2, 7, 6, 5.6],\n                        'Aprovado': [True, False, False, True, True, True, False, False]},\n                        columns = ['Nome', 'Idade', 'Sexo', 'Notas', 'Aprovado'])\n\nalunos","kernel":"python3","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Nome</th>\n      <th>Idade</th>\n      <th>Sexo</th>\n      <th>Notas</th>\n      <th>Aprovado</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Ary</td>\n      <td>15</td>\n      <td>M</td>\n      <td>7.5</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Cátia</td>\n      <td>27</td>\n      <td>F</td>\n      <td>2.5</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Denis</td>\n      <td>56</td>\n      <td>M</td>\n      <td>5.0</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Beto</td>\n      <td>32</td>\n      <td>M</td>\n      <td>10.0</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>Bruna</td>\n      <td>42</td>\n      <td>F</td>\n      <td>8.2</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>Dara</td>\n      <td>21</td>\n      <td>F</td>\n      <td>7.0</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>Carlos</td>\n      <td>19</td>\n      <td>M</td>\n      <td>6.0</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>Alice</td>\n      <td>35</td>\n      <td>F</td>\n      <td>5.6</td>\n      <td>False</td>\n    </tr>\n  </tbody>\n</table>\n</div>","text/plain":"     Nome  Idade Sexo  Notas  Aprovado\n0     Ary     15    M    7.5      True\n1   Cátia     27    F    2.5     False\n2   Denis     56    M    5.0     False\n3    Beto     32    M   10.0      True\n4   Bruna     42    F    8.2      True\n5    Dara     21    F    7.0      True\n6  Carlos     19    M    6.0     False\n7   Alice     35    F    5.6     False"},"exec_count":36}},"pos":21,"start":1627010832202,"state":"done","type":"cell"}
{"end":1627010832237,"exec_count":37,"id":"d38c7d","input":"sexo = alunos.groupby('Sexo')\nsexo = pd.DataFrame(sexo['Notas'].mean().round(2))\nsexo.columns = ['Notas Médias']\nsexo","kernel":"python3","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Notas Médias</th>\n    </tr>\n    <tr>\n      <th>Sexo</th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>F</th>\n      <td>5.82</td>\n    </tr>\n    <tr>\n      <th>M</th>\n      <td>7.12</td>\n    </tr>\n  </tbody>\n</table>\n</div>","text/plain":"      Notas Médias\nSexo              \nF             5.82\nM             7.12"},"exec_count":37}},"pos":23,"start":1627010832223,"state":"done","type":"cell"}
{"end":1627010913039,"exec_count":39,"id":"963b29","input":"grupo_bairro['Valor'].describe().round()","kernel":"python3","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>count</th>\n      <th>mean</th>\n      <th>std</th>\n      <th>min</th>\n      <th>25%</th>\n      <th>50%</th>\n      <th>75%</th>\n      <th>max</th>\n    </tr>\n    <tr>\n      <th>Bairro</th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>Barra da Tijuca</th>\n      <td>3863.0</td>\n      <td>7070.0</td>\n      <td>11874.0</td>\n      <td>800.0</td>\n      <td>2500.0</td>\n      <td>4500.0</td>\n      <td>8500.0</td>\n      <td>600000.0</td>\n    </tr>\n    <tr>\n      <th>Botafogo</th>\n      <td>873.0</td>\n      <td>8792.0</td>\n      <td>152202.0</td>\n      <td>700.0</td>\n      <td>2200.0</td>\n      <td>3000.0</td>\n      <td>4350.0</td>\n      <td>4500000.0</td>\n    </tr>\n    <tr>\n      <th>Copacabana</th>\n      <td>2644.0</td>\n      <td>4127.0</td>\n      <td>3611.0</td>\n      <td>100.0</td>\n      <td>2000.0</td>\n      <td>3000.0</td>\n      <td>4800.0</td>\n      <td>35000.0</td>\n    </tr>\n    <tr>\n      <th>Flamengo</th>\n      <td>714.0</td>\n      <td>4114.0</td>\n      <td>3839.0</td>\n      <td>800.0</td>\n      <td>1900.0</td>\n      <td>2900.0</td>\n      <td>4975.0</td>\n      <td>35000.0</td>\n    </tr>\n    <tr>\n      <th>Ipanema</th>\n      <td>1764.0</td>\n      <td>9352.0</td>\n      <td>8220.0</td>\n      <td>1200.0</td>\n      <td>4500.0</td>\n      <td>7000.0</td>\n      <td>11000.0</td>\n      <td>90000.0</td>\n    </tr>\n    <tr>\n      <th>Leblon</th>\n      <td>1258.0</td>\n      <td>8746.0</td>\n      <td>7004.0</td>\n      <td>100.0</td>\n      <td>4500.0</td>\n      <td>7000.0</td>\n      <td>10500.0</td>\n      <td>100000.0</td>\n    </tr>\n    <tr>\n      <th>Tijuca</th>\n      <td>1100.0</td>\n      <td>2044.0</td>\n      <td>1664.0</td>\n      <td>750.0</td>\n      <td>1500.0</td>\n      <td>1800.0</td>\n      <td>2300.0</td>\n      <td>45000.0</td>\n    </tr>\n  </tbody>\n</table>\n</div>","text/plain":"                  count    mean       std     min     25%     50%      75%  \\\nBairro                                                                       \nBarra da Tijuca  3863.0  7070.0   11874.0   800.0  2500.0  4500.0   8500.0   \nBotafogo          873.0  8792.0  152202.0   700.0  2200.0  3000.0   4350.0   \nCopacabana       2644.0  4127.0    3611.0   100.0  2000.0  3000.0   4800.0   \nFlamengo          714.0  4114.0    3839.0   800.0  1900.0  2900.0   4975.0   \nIpanema          1764.0  9352.0    8220.0  1200.0  4500.0  7000.0  11000.0   \nLeblon           1258.0  8746.0    7004.0   100.0  4500.0  7000.0  10500.0   \nTijuca           1100.0  2044.0    1664.0   750.0  1500.0  1800.0   2300.0   \n\n                       max  \nBairro                      \nBarra da Tijuca   600000.0  \nBotafogo         4500000.0  \nCopacabana         35000.0  \nFlamengo           35000.0  \nIpanema            90000.0  \nLeblon            100000.0  \nTijuca             45000.0  "},"exec_count":39}},"pos":18.5,"start":1627010913009,"state":"done","type":"cell"}
{"end":1627011290827,"exec_count":40,"id":"35c811","input":"# Usando o método aggregate()\ngrupo_bairro['Valor'].aggregate(['min', 'max', 'sum'])","kernel":"python3","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>min</th>\n      <th>max</th>\n      <th>sum</th>\n    </tr>\n    <tr>\n      <th>Bairro</th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>Barra da Tijuca</th>\n      <td>800.0</td>\n      <td>600000.0</td>\n      <td>27309683.0</td>\n    </tr>\n    <tr>\n      <th>Botafogo</th>\n      <td>700.0</td>\n      <td>4500000.0</td>\n      <td>7675266.0</td>\n    </tr>\n    <tr>\n      <th>Copacabana</th>\n      <td>100.0</td>\n      <td>35000.0</td>\n      <td>10910934.0</td>\n    </tr>\n    <tr>\n      <th>Flamengo</th>\n      <td>800.0</td>\n      <td>35000.0</td>\n      <td>2937058.0</td>\n    </tr>\n    <tr>\n      <th>Ipanema</th>\n      <td>1200.0</td>\n      <td>90000.0</td>\n      <td>16496930.0</td>\n    </tr>\n    <tr>\n      <th>Leblon</th>\n      <td>100.0</td>\n      <td>100000.0</td>\n      <td>11002902.0</td>\n    </tr>\n    <tr>\n      <th>Tijuca</th>\n      <td>750.0</td>\n      <td>45000.0</td>\n      <td>2247872.0</td>\n    </tr>\n  </tbody>\n</table>\n</div>","text/plain":"                    min        max         sum\nBairro                                        \nBarra da Tijuca   800.0   600000.0  27309683.0\nBotafogo          700.0  4500000.0   7675266.0\nCopacabana        100.0    35000.0  10910934.0\nFlamengo          800.0    35000.0   2937058.0\nIpanema          1200.0    90000.0  16496930.0\nLeblon            100.0   100000.0  11002902.0\nTijuca            750.0    45000.0   2247872.0"},"exec_count":40}},"pos":18.8125,"start":1627011290813,"state":"done","type":"cell"}
{"end":1627011942055,"exec_count":49,"id":"5ba54e","input":"# Config necessária para exibir os gráficos no Jupyter\n%matplotlib inline\n\nimport matplotlib.pyplot as plt\n\nplt.rc('figure', figsize = (20, 10))","kernel":"python3","pos":18.96875,"start":1627011942049,"state":"done","type":"cell"}
{"end":1627012626028,"exec_count":59,"id":"435957","input":"produtos = precos.groupby('Produto')\nprodutos.describe().round(2)","kernel":"python3","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead tr th {\n        text-align: left;\n    }\n\n    .dataframe thead tr:last-of-type th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr>\n      <th></th>\n      <th colspan=\"8\" halign=\"left\">Preço</th>\n    </tr>\n    <tr>\n      <th></th>\n      <th>count</th>\n      <th>mean</th>\n      <th>std</th>\n      <th>min</th>\n      <th>25%</th>\n      <th>50%</th>\n      <th>75%</th>\n      <th>max</th>\n    </tr>\n    <tr>\n      <th>Produto</th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>Batata</th>\n      <td>3.0</td>\n      <td>3.96</td>\n      <td>0.26</td>\n      <td>3.69</td>\n      <td>3.84</td>\n      <td>3.99</td>\n      <td>4.10</td>\n      <td>4.2</td>\n    </tr>\n    <tr>\n      <th>Cebola</th>\n      <td>3.0</td>\n      <td>2.06</td>\n      <td>0.41</td>\n      <td>1.69</td>\n      <td>1.84</td>\n      <td>1.99</td>\n      <td>2.24</td>\n      <td>2.5</td>\n    </tr>\n    <tr>\n      <th>Tomate</th>\n      <td>3.0</td>\n      <td>3.43</td>\n      <td>0.52</td>\n      <td>2.99</td>\n      <td>3.14</td>\n      <td>3.29</td>\n      <td>3.64</td>\n      <td>4.0</td>\n    </tr>\n  </tbody>\n</table>\n</div>","text/plain":"        Preço                                         \n        count  mean   std   min   25%   50%   75%  max\nProduto                                               \nBatata    3.0  3.96  0.26  3.69  3.84  3.99  4.10  4.2\nCebola    3.0  2.06  0.41  1.69  1.84  1.99  2.24  2.5\nTomate    3.0  3.43  0.52  2.99  3.14  3.29  3.64  4.0"},"exec_count":59}},"pos":23.625,"start":1627012625998,"state":"done","type":"cell"}
{"end":1627013042000,"exec_count":62,"id":"32ec89","input":"# Agregando as descritivas e renomeando as colunas\ngrupo_bairro['Valor'].aggregate(['min', 'max', 'sum']).rename(columns = {'min': 'Mínimo', 'max': 'Máximo', 'sum': 'Soma'})","kernel":"python3","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Mínimo</th>\n      <th>Máximo</th>\n      <th>Soma</th>\n    </tr>\n    <tr>\n      <th>Bairro</th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>Barra da Tijuca</th>\n      <td>800.0</td>\n      <td>600000.0</td>\n      <td>27309683.0</td>\n    </tr>\n    <tr>\n      <th>Botafogo</th>\n      <td>700.0</td>\n      <td>4500000.0</td>\n      <td>7675266.0</td>\n    </tr>\n    <tr>\n      <th>Copacabana</th>\n      <td>100.0</td>\n      <td>35000.0</td>\n      <td>10910934.0</td>\n    </tr>\n    <tr>\n      <th>Flamengo</th>\n      <td>800.0</td>\n      <td>35000.0</td>\n      <td>2937058.0</td>\n    </tr>\n    <tr>\n      <th>Ipanema</th>\n      <td>1200.0</td>\n      <td>90000.0</td>\n      <td>16496930.0</td>\n    </tr>\n    <tr>\n      <th>Leblon</th>\n      <td>100.0</td>\n      <td>100000.0</td>\n      <td>11002902.0</td>\n    </tr>\n    <tr>\n      <th>Tijuca</th>\n      <td>750.0</td>\n      <td>45000.0</td>\n      <td>2247872.0</td>\n    </tr>\n  </tbody>\n</table>\n</div>","text/plain":"                 Mínimo     Máximo        Soma\nBairro                                        \nBarra da Tijuca   800.0   600000.0  27309683.0\nBotafogo          700.0  4500000.0   7675266.0\nCopacabana        100.0    35000.0  10910934.0\nFlamengo          800.0    35000.0   2937058.0\nIpanema          1200.0    90000.0  16496930.0\nLeblon            100.0   100000.0  11002902.0\nTijuca            750.0    45000.0   2247872.0"},"exec_count":62}},"pos":18.875,"start":1627013041988,"state":"done","type":"cell"}
{"exec_count":54,"id":"9bfd5f","input":"# Plotando um gráfico com o desvio padrão do aluguel por bairro do grupo\n\nfig = grupo_bairro['Valor'].std().plot.bar(color = 'blue')\nfig.set_ylabel('Valor do Aluguel')\nfig.set_title('Devio Padrão do Aluguel por Bairro', {'fontsize': 22})","kernel":"python3","output":{"0":{"data":{"text/plain":"Text(0.5, 1.0, 'Devio Padrão do Aluguel por Bairro')"},"exec_count":54},"1":{"data":{"image/png":"4a10308241f4289c754f37a8bf0fbca98f32a6ce","text/plain":"<Figure size 1440x720 with 1 Axes>"},"metadata":{"image/png":{"height":677,"width":1189},"needs_background":"light"}}},"pos":18.984375,"state":"done","type":"cell"}
{"exec_count":55,"id":"e816fa","input":"# Plotando um gráfico com o valor médio do aluguel por bairro do grupo\n\nfig = grupo_bairro['Valor'].mean().plot.bar(color = 'blue')\nfig.set_ylabel('Valor do Aluguel')\nfig.set_title('Valor Médio do Aluguel por Bairro', {'fontsize': 22})","kernel":"python3","output":{"0":{"data":{"text/plain":"Text(0.5, 1.0, 'Valor Médio do Aluguel por Bairro')"},"exec_count":55},"1":{"data":{"image/png":"991f0e6b5fbe5e41de301282ed1b07c5cbe1962f","text/plain":"<Figure size 1440x720 with 1 Axes>"},"metadata":{"image/png":{"height":678,"width":1176},"needs_background":"light"}}},"pos":18.98828125,"state":"done","type":"cell"}
{"exec_count":56,"id":"86243a","input":"# Plotando um gráfico com o valor máximo do aluguel por bairro do grupo\n\nfig = grupo_bairro['Valor'].max().plot.bar(color = 'blue')\nfig.set_ylabel('Valor do Aluguel')\nfig.set_title('Valor Máximo do Aluguel por Bairro', {'fontsize': 22})","kernel":"python3","output":{"0":{"data":{"text/plain":"Text(0.5, 1.0, 'Valor Máximo do Aluguel por Bairro')"},"exec_count":56},"1":{"data":{"image/png":"ebd50395e4893731789ae8ac92f4fdd6016f7f3d","text/plain":"<Figure size 1440x720 with 1 Axes>"},"metadata":{"image/png":{"height":678,"width":1157},"needs_background":"light"}}},"pos":18.9921875,"state":"done","type":"cell"}
{"exec_count":57,"id":"6c7fc5","input":"\nfig = grupo_bairro['Valor'].min().plot.bar(color = 'blue')\nfig.set_ylabel('Valor do Aluguel')\nfig.set_title('Valor Mínimo do Aluguel por Bairro', {'fontsize': 22})","kernel":"python3","output":{"0":{"data":{"text/plain":"Text(0.5, 1.0, 'Valor Mínimo do Aluguel por Bairro')"},"exec_count":57},"1":{"data":{"image/png":"da012dcd80b946373545cc5cc4a7f817d6eadfbb","text/plain":"<Figure size 1440x720 with 1 Axes>"},"metadata":{"image/png":{"height":678,"width":1176},"needs_background":"light"}}},"pos":18.99609375,"state":"done","type":"cell"}
{"exec_count":58,"id":"dc016a","input":"precos = pd.DataFrame([['Feira', 'Cebola', 2.5],\n                        ['Mercado', 'Cebola', 1.99],\n                        ['Supermercado', 'Cebola', 1.69],\n                        ['Feira', 'Tomate', 4],\n                        ['Mercado', 'Tomate', 3.29],\n                        ['Supermercado', 'Tomate', 2.99],\n                        ['Feira', 'Batata', 4.2],\n                        ['Mercado', 'Batata', 3.99],\n                        ['Supermercado', 'Batata', 3.69]],\n                        columns = ['Local', 'Produto', 'Preço'])\nprecos","kernel":"python3","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Local</th>\n      <th>Produto</th>\n      <th>Preço</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Feira</td>\n      <td>Cebola</td>\n      <td>2.50</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Mercado</td>\n      <td>Cebola</td>\n      <td>1.99</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Supermercado</td>\n      <td>Cebola</td>\n      <td>1.69</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Feira</td>\n      <td>Tomate</td>\n      <td>4.00</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>Mercado</td>\n      <td>Tomate</td>\n      <td>3.29</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>Supermercado</td>\n      <td>Tomate</td>\n      <td>2.99</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>Feira</td>\n      <td>Batata</td>\n      <td>4.20</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>Mercado</td>\n      <td>Batata</td>\n      <td>3.99</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>Supermercado</td>\n      <td>Batata</td>\n      <td>3.69</td>\n    </tr>\n  </tbody>\n</table>\n</div>","text/plain":"          Local Produto  Preço\n0         Feira  Cebola   2.50\n1       Mercado  Cebola   1.99\n2  Supermercado  Cebola   1.69\n3         Feira  Tomate   4.00\n4       Mercado  Tomate   3.29\n5  Supermercado  Tomate   2.99\n6         Feira  Batata   4.20\n7       Mercado  Batata   3.99\n8  Supermercado  Batata   3.69"},"exec_count":58}},"pos":23.5,"state":"done","type":"cell"}
{"exec_count":61,"id":"59405e","input":"estatisticas = ['mean', 'std', 'min', 'max']\nnomes = {'mean': 'Média', 'std': 'Desvio Padrão', 'min': 'Mínimo', 'max': 'Máximo'}\nprodutos['Preço'].aggregate(estatisticas).rename(columns = nomes).round(2)","kernel":"python3","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Média</th>\n      <th>Desvio Padrão</th>\n      <th>Mínimo</th>\n      <th>Máximo</th>\n    </tr>\n    <tr>\n      <th>Produto</th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>Batata</th>\n      <td>3.96</td>\n      <td>0.26</td>\n      <td>3.69</td>\n      <td>4.2</td>\n    </tr>\n    <tr>\n      <th>Cebola</th>\n      <td>2.06</td>\n      <td>0.41</td>\n      <td>1.69</td>\n      <td>2.5</td>\n    </tr>\n    <tr>\n      <th>Tomate</th>\n      <td>3.43</td>\n      <td>0.52</td>\n      <td>2.99</td>\n      <td>4.0</td>\n    </tr>\n  </tbody>\n</table>\n</div>","text/plain":"         Média  Desvio Padrão  Mínimo  Máximo\nProduto                                      \nBatata    3.96           0.26    3.69     4.2\nCebola    2.06           0.41    1.69     2.5\nTomate    3.43           0.52    2.99     4.0"},"exec_count":61}},"pos":23.875,"state":"done","type":"cell"}
{"last_load":1627006491548,"type":"file"}