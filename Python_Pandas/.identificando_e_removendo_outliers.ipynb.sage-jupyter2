{"attachments":{"compressed_box-plot.png":{"type":"sha1","value":"aef372bcb129e40d6715bf46bbfd715ddc5e74c3"}},"cell_type":"markdown","id":"b18a00","input":"![compressed_box-plot.png](attachment:compressed_box-plot.png)","pos":5,"type":"cell"}
{"attachments":{"compressed_grafico.png":{"type":"sha1","value":"ba30f36973c58ede7921c25d04e9afe9fc0daf06"}},"cell_type":"markdown","exec_count":46,"id":"25a03a","input":"#### 02 - A biblioteca matplotlib\n\nVamos testar nosso conhecimento sobre o pacote matplotlib. Considere neste exercício o arquivo aluguel_amostra.csv e indique nas opções abaixo qual o código necessário para gerar os gráficos da figura a seguir:![compressed_grafico.png](attachment:compressed_grafico.png)\n\nNeste exercício, estamos apresentando o gráfico de pizza que pode ser obtido com a aplicação do método pie(), de matplotlib. Considere o código inicial abaixo para escolher a alternativa correta:","kernel":"python3","pos":60.5,"state":"done","type":"cell"}
{"backend_state":"running","connection_file":"/tmp/xdg-runtime-user/jupyter/kernel-00e4bf1d-25b8-4dfc-a451-9bb288fdf2b5.json","kernel":"python3","kernel_error":"","kernel_state":"idle","kernel_usage":{"cpu":0,"memory":0},"metadata":{"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.8.10"}},"trust":true,"type":"settings"}
{"cell_type":"code","end":1627076864309,"exec_count":2,"id":"f364a1","input":"%matplotlib inline\nimport pandas as pd\nimport matplotlib.pyplot as plt\n\nplt.rc('figure', figsize = (14, 6))","kernel":"python3","pos":2,"start":1627076863569,"state":"done","type":"cell"}
{"cell_type":"code","end":1627076864524,"exec_count":3,"id":"32e2d8","input":"dados = pd.read_csv('dados/aluguel_residencial.csv', sep = ';')","kernel":"python3","pos":3,"start":1627076864318,"state":"done","type":"cell"}
{"cell_type":"code","end":1627076866437,"exec_count":4,"id":"3aff1a","input":"dados.boxplot(['Valor'])","kernel":"python3","output":{"0":{"data":{"text/plain":"<AxesSubplot:>"},"exec_count":4},"1":{"data":{"image/png":"b45f581478ec33e1aea3d3f6754b9a08d366a396","text/plain":"<Figure size 1008x432 with 1 Axes>"},"metadata":{"image/png":{"height":367,"width":809},"needs_background":"light"}}},"pos":7,"start":1627076864534,"state":"done","type":"cell"}
{"cell_type":"code","end":1627076866463,"exec_count":5,"id":"67e8fc","input":"dados[dados['Valor'] >= 500000]","kernel":"python3","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Tipo</th>\n      <th>Bairro</th>\n      <th>Quartos</th>\n      <th>Vagas</th>\n      <th>Suites</th>\n      <th>Area</th>\n      <th>Valor</th>\n      <th>Condominio</th>\n      <th>IPTU</th>\n      <th>Valor por m²</th>\n      <th>Tipo Agregado</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>7629</th>\n      <td>Apartamento</td>\n      <td>Barra da Tijuca</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>65</td>\n      <td>600000.0</td>\n      <td>980.0</td>\n      <td>120.0</td>\n      <td>9230.77</td>\n      <td>Apartamento</td>\n    </tr>\n    <tr>\n      <th>10636</th>\n      <td>Casa de Condomínio</td>\n      <td>Freguesia (Jacarepaguá)</td>\n      <td>4</td>\n      <td>2</td>\n      <td>3</td>\n      <td>163</td>\n      <td>800000.0</td>\n      <td>900.0</td>\n      <td>0.0</td>\n      <td>4907.98</td>\n      <td>Casa</td>\n    </tr>\n    <tr>\n      <th>12661</th>\n      <td>Apartamento</td>\n      <td>Freguesia (Jacarepaguá)</td>\n      <td>2</td>\n      <td>2</td>\n      <td>1</td>\n      <td>150</td>\n      <td>550000.0</td>\n      <td>850.0</td>\n      <td>150.0</td>\n      <td>3666.67</td>\n      <td>Apartamento</td>\n    </tr>\n    <tr>\n      <th>13846</th>\n      <td>Apartamento</td>\n      <td>Recreio dos Bandeirantes</td>\n      <td>3</td>\n      <td>2</td>\n      <td>1</td>\n      <td>167</td>\n      <td>1250000.0</td>\n      <td>1186.0</td>\n      <td>320.0</td>\n      <td>7485.03</td>\n      <td>Apartamento</td>\n    </tr>\n    <tr>\n      <th>15520</th>\n      <td>Apartamento</td>\n      <td>Botafogo</td>\n      <td>4</td>\n      <td>1</td>\n      <td>1</td>\n      <td>300</td>\n      <td>4500000.0</td>\n      <td>1100.0</td>\n      <td>0.0</td>\n      <td>15000.00</td>\n      <td>Apartamento</td>\n    </tr>\n  </tbody>\n</table>\n</div>","text/plain":"                     Tipo                    Bairro  Quartos  Vagas  Suites  \\\n7629          Apartamento           Barra da Tijuca        1      1       0   \n10636  Casa de Condomínio   Freguesia (Jacarepaguá)        4      2       3   \n12661         Apartamento   Freguesia (Jacarepaguá)        2      2       1   \n13846         Apartamento  Recreio dos Bandeirantes        3      2       1   \n15520         Apartamento                  Botafogo        4      1       1   \n\n       Area      Valor  Condominio   IPTU  Valor por m² Tipo Agregado  \n7629     65   600000.0       980.0  120.0       9230.77   Apartamento  \n10636   163   800000.0       900.0    0.0       4907.98          Casa  \n12661   150   550000.0       850.0  150.0       3666.67   Apartamento  \n13846   167  1250000.0      1186.0  320.0       7485.03   Apartamento  \n15520   300  4500000.0      1100.0    0.0      15000.00   Apartamento  "},"exec_count":5}},"pos":9,"start":1627076866445,"state":"done","type":"cell"}
{"cell_type":"code","end":1627076866473,"exec_count":6,"id":"85b113","input":"# Criando as estatísticas\n\n# Primeiro vamos gerar uma Series para facilitar a visualização\nvalor = dados['Valor']","kernel":"python3","pos":11,"start":1627076866468,"state":"done","type":"cell"}
{"cell_type":"code","end":1627076866492,"exec_count":7,"id":"74c9a2","input":"# Calculando o primeiro quartil (Q1)\nQ1 = valor.quantile(.25)\n\n# Calculando o terceiro quartil (Q3)\nQ3 = valor.quantile(.75)\n\n# Intervalo interquartírico\nIIQ = Q3 - Q1\n\n# Limites\nlimite_inferior = Q1 - 1.5 * IIQ\nlimite_superior = Q3 + 1.5 * IIQ","kernel":"python3","pos":12,"start":1627076866478,"state":"done","type":"cell"}
{"cell_type":"code","end":1627076866510,"exec_count":8,"id":"2b86ab","input":"Q1","kernel":"python3","output":{"0":{"data":{"text/plain":"1600.0"},"exec_count":8}},"pos":13,"start":1627076866503,"state":"done","type":"cell"}
{"cell_type":"code","end":1627076866536,"exec_count":9,"id":"4b9570","input":"# Selecionando os dados que estão apenas nos limites do Box-plot\nselecao = (valor >= limite_inferior) & (valor <= limite_superior)\ndados_new = dados[selecao]","kernel":"python3","pos":14,"start":1627076866513,"state":"done","type":"cell"}
{"cell_type":"code","end":1627076866921,"exec_count":10,"id":"e99ff4","input":"# Refazendo o box-plot\ndados_new.boxplot(['Valor'])","kernel":"python3","output":{"0":{"data":{"text/plain":"<AxesSubplot:>"},"exec_count":10},"1":{"data":{"image/png":"d109929cd8cfd74eb4264018c1ad0334f4e47586","text/plain":"<Figure size 1008x432 with 1 Axes>"},"metadata":{"image/png":{"height":357,"width":834},"needs_background":"light"}}},"pos":15,"start":1627076866541,"state":"done","type":"cell"}
{"cell_type":"code","end":1627076867600,"exec_count":11,"id":"f5e34d","input":"dados.hist(['Valor'])\ndados_new.hist(['Valor'])","kernel":"python3","output":{"0":{"data":{"text/plain":"array([[<AxesSubplot:title={'center':'Valor'}>]], dtype=object)"},"exec_count":11},"1":{"data":{"image/png":"40cb5ac096a016b785d02ad302ea1925833294e4","text/plain":"<Figure size 1008x432 with 1 Axes>"},"metadata":{"image/png":{"height":385,"width":834},"needs_background":"light"}},"2":{"data":{"image/png":"edfef4d7665570149c410ac6bc3323132e626a4e","text/plain":"<Figure size 1008x432 with 1 Axes>"},"metadata":{"image/png":{"height":372,"width":828},"needs_background":"light"}}},"pos":19,"start":1627076866944,"state":"done","type":"cell"}
{"cell_type":"code","end":1627076867954,"exec_count":12,"id":"a65718","input":"# Primeiramente construiremos nosso box-plot e depois prosseguimos com a análise:\ndados.boxplot(['Valor'], by = ['Tipo'])","kernel":"python3","output":{"0":{"data":{"text/plain":"<AxesSubplot:title={'center':'Valor'}, xlabel='[Tipo]'>"},"exec_count":12},"1":{"data":{"image/png":"0eea00eb2ecb604a3eb492f48ee3cd7ec81eeea3","text/plain":"<Figure size 1008x432 with 1 Axes>"},"metadata":{"image/png":{"height":402,"width":834},"needs_background":"light"}}},"pos":22,"start":1627076867617,"state":"done","type":"cell"}
{"cell_type":"code","end":1627076867968,"exec_count":13,"id":"7256d6","input":"# Criaremos grupo_tipo e chamaremos os dados.\ngrupo_tipo = dados.groupby('Tipo')","kernel":"python3","pos":24,"start":1627076867964,"state":"done","type":"cell"}
{"cell_type":"code","end":1627076867990,"exec_count":14,"id":"6274d9","input":"type(grupo_tipo)","kernel":"python3","output":{"0":{"data":{"text/plain":"pandas.core.groupby.generic.DataFrameGroupBy"},"exec_count":14}},"pos":25,"start":1627076867974,"state":"done","type":"cell"}
{"cell_type":"code","end":1627076868006,"exec_count":15,"id":"0a5cfe","input":"grupo_tipo = dados.groupby('Tipo')['Valor']","kernel":"python3","pos":26,"start":1627076867995,"state":"done","type":"cell"}
{"cell_type":"code","end":1627076868027,"exec_count":16,"id":"b5545e","input":"# Objeto GroupBy\ntype(grupo_tipo)","kernel":"python3","output":{"0":{"data":{"text/plain":"pandas.core.groupby.generic.SeriesGroupBy"},"exec_count":16}},"pos":27,"start":1627076868012,"state":"done","type":"cell"}
{"cell_type":"code","end":1627076868060,"exec_count":17,"id":"1aee34","input":"# Visualizando os dados como uma dicionário, com a chave sendo o tipo\n# E os índices, onde eles estão localizados dentro do database\n\ngrupo_tipo.groups","kernel":"python3","output":{"0":{"data":{"text/plain":"{'Apartamento': [2, 3, 4, 7, 8, 9, 11, 13, 14, 15, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 79, 80, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, ...], 'Casa': [1, 22, 54, 57, 96, 100, 144, 160, 180, 238, 250, 253, 264, 286, 310, 316, 334, 339, 357, 378, 385, 399, 424, 434, 474, 475, 481, 511, 542, 543, 567, 571, 572, 618, 621, 630, 635, 636, 660, 676, 700, 721, 724, 760, 771, 780, 856, 873, 937, 982, 1029, 1036, 1118, 1123, 1125, 1157, 1178, 1249, 1256, 1316, 1335, 1350, 1371, 1412, 1426, 1430, 1440, 1445, 1472, 1475, 1488, 1586, 1604, 1656, 1662, 1666, 1671, 1684, 1709, 1717, 1762, 1810, 1835, 1875, 1905, 1933, 1942, 1960, 2019, 2039, 2056, 2075, 2101, 2107, 2108, 2133, 2170, 2201, 2204, 2211, ...], 'Casa de Condomínio': [5, 6, 12, 16, 42, 58, 166, 168, 183, 207, 222, 246, 259, 265, 279, 291, 308, 336, 391, 401, 440, 445, 449, 502, 556, 609, 622, 657, 663, 673, 707, 723, 781, 807, 809, 863, 883, 887, 934, 958, 961, 979, 986, 992, 1004, 1008, 1028, 1082, 1095, 1112, 1129, 1148, 1158, 1182, 1220, 1227, 1229, 1239, 1246, 1308, 1312, 1320, 1341, 1356, 1406, 1438, 1439, 1467, 1495, 1531, 1560, 1582, 1601, 1615, 1646, 1713, 1722, 1728, 1756, 1764, 1770, 1802, 1860, 1880, 1883, 1899, 1938, 2031, 2033, 2071, 2152, 2168, 2200, 2224, 2246, 2248, 2327, 2333, 2357, 2371, ...], 'Casa de Vila': [81, 212, 220, 303, 332, 697, 822, 844, 918, 1012, 1353, 1362, 1447, 1491, 1553, 1639, 1669, 1703, 1769, 2087, 2249, 2267, 2446, 2533, 2547, 2605, 2641, 2727, 2840, 2872, 2977, 2984, 3017, 3025, 3300, 3426, 3523, 3703, 3823, 3855, 3858, 3863, 4094, 4146, 4153, 4165, 4340, 4444, 4826, 5151, 5170, 5175, 5198, 5294, 5410, 5535, 5597, 5724, 5751, 5911, 5950, 5995, 6008, 6031, 6049, 6201, 6236, 6300, 6348, 6402, 6429, 6754, 6795, 6939, 6957, 7033, 7091, 7146, 7296, 7697, 7712, 7778, 7837, 7843, 7968, 8004, 8136, 8427, 8452, 8578, 9229, 9234, 9319, 9476, 9619, 9624, 9716, 9739, 9784, 9867, ...], 'Quitinete': [0, 10, 28, 71, 78, 86, 101, 120, 146, 174, 191, 206, 223, 248, 301, 314, 327, 344, 355, 425, 426, 427, 460, 486, 532, 633, 650, 680, 808, 870, 917, 919, 924, 928, 939, 944, 970, 1001, 1016, 1044, 1070, 1156, 1170, 1172, 1184, 1192, 1196, 1212, 1217, 1261, 1274, 1334, 1351, 1360, 1393, 1404, 1407, 1483, 1496, 1510, 1543, 1595, 1611, 1613, 1633, 1696, 1697, 1706, 1733, 1753, 1772, 1824, 1839, 1853, 1910, 2013, 2085, 2098, 2125, 2142, 2149, 2156, 2160, 2227, 2237, 2239, 2258, 2272, 2326, 2362, 2382, 2383, 2384, 2394, 2445, 2457, 2462, 2493, 2507, 2630, ...]}"},"exec_count":17}},"pos":28,"start":1627076868032,"state":"done","type":"cell"}
{"cell_type":"code","end":1627076868081,"exec_count":18,"id":"e88846","input":"# Calculando o primeiro quartil (Q1)\nQ1 = grupo_tipo.quantile(.25)\n\n# Calculando o terceiro quartil (Q3)\nQ3 = grupo_tipo.quantile(.75)\n\n# Intervalo interquartírico\nIIQ = Q3 - Q1\n\n# Limites\nlimite_inferior = Q1 - 1.5 * IIQ\nlimite_superior = Q3 + 1.5 * IIQ","kernel":"python3","pos":30,"start":1627076868077,"state":"done","type":"cell"}
{"cell_type":"code","end":1627076868098,"exec_count":19,"id":"ad6ba4","input":"Q1","kernel":"python3","output":{"0":{"data":{"text/plain":"Tipo\nApartamento           1700.0\nCasa                  1100.0\nCasa de Condomínio    4000.0\nCasa de Vila           750.0\nQuitinete              900.0\nName: Valor, dtype: float64"},"exec_count":19}},"pos":31,"start":1627076868086,"state":"done","type":"cell"}
{"cell_type":"code","end":1627076868111,"exec_count":20,"id":"044af1","input":"Q3","kernel":"python3","output":{"0":{"data":{"text/plain":"Tipo\nApartamento            5000.0\nCasa                   9800.0\nCasa de Condomínio    15250.0\nCasa de Vila           1800.0\nQuitinete              1500.0\nName: Valor, dtype: float64"},"exec_count":20}},"pos":32,"start":1627076868102,"state":"done","type":"cell"}
{"cell_type":"code","end":1627076868137,"exec_count":21,"id":"5b5e0c","input":"IIQ","kernel":"python3","output":{"0":{"data":{"text/plain":"Tipo\nApartamento            3300.0\nCasa                   8700.0\nCasa de Condomínio    11250.0\nCasa de Vila           1050.0\nQuitinete               600.0\nName: Valor, dtype: float64"},"exec_count":21}},"pos":33,"start":1627076868124,"state":"done","type":"cell"}
{"cell_type":"code","end":1627076868160,"exec_count":22,"id":"56717c","input":"limite_inferior","kernel":"python3","output":{"0":{"data":{"text/plain":"Tipo\nApartamento           -3250.0\nCasa                 -11950.0\nCasa de Condomínio   -12875.0\nCasa de Vila           -825.0\nQuitinete                 0.0\nName: Valor, dtype: float64"},"exec_count":22}},"pos":34,"start":1627076868142,"state":"done","type":"cell"}
{"cell_type":"code","end":1627076868186,"exec_count":23,"id":"4a459e","input":"limite_superior","kernel":"python3","output":{"0":{"data":{"text/plain":"Tipo\nApartamento            9950.0\nCasa                  22850.0\nCasa de Condomínio    32125.0\nCasa de Vila           3375.0\nQuitinete              2400.0\nName: Valor, dtype: float64"},"exec_count":23}},"pos":35,"start":1627076868168,"state":"done","type":"cell"}
{"cell_type":"code","end":1627076868208,"exec_count":24,"id":"28437f","input":"# Acessando o limite superior de um imóvel Tipo Apartamento\nlimite_superior['Apartamento']","kernel":"python3","output":{"0":{"data":{"text/plain":"9950.0"},"exec_count":24}},"pos":36,"start":1627076868200,"state":"done","type":"cell"}
{"cell_type":"code","end":1627076868225,"exec_count":25,"id":"52180f","input":"# Acessando o limite superior de um imóvel Tipo Casa\nlimite_superior['Casa']","kernel":"python3","output":{"0":{"data":{"text/plain":"22850.0"},"exec_count":25}},"pos":37,"start":1627076868213,"state":"done","type":"cell"}
{"cell_type":"code","end":1627076868245,"exec_count":26,"id":"5b30c7","input":"# Agora vamos fazer as seleções para, em seguida, fazer as exclusões do arquivo\n\n# Primeiro vamos printar o tipo pra visualizar o que o for está iterando\nfor tipo in grupo_tipo.groups.keys():\n    print(tipo)","kernel":"python3","output":{"0":{"name":"stdout","text":"Apartamento\nCasa\nCasa de Condomínio\nCasa de Vila\nQuitinete\n"}},"pos":38,"start":1627076868230,"state":"done","type":"cell"}
{"cell_type":"code","end":1627076868290,"exec_count":27,"id":"510b68","input":"# Seleção Tipo Apartamento, Casa e Condomínio que esteja dentro dos limites do boxplot\ndados_new = pd.DataFrame()\nfor tipo in grupo_tipo.groups.keys():\n    eh_tipo = dados['Tipo'] == tipo\n    eh_dentro_limite = (dados['Valor'] >= limite_inferior[tipo]) & (dados['Valor'] <= limite_superior[tipo])\n    selecao = eh_tipo & eh_dentro_limite\n    dados_selecao = dados[selecao]\n    dados_new = pd.concat([dados_new, dados_selecao])","kernel":"python3","pos":40,"start":1627076868251,"state":"done","type":"cell"}
{"cell_type":"code","end":1627076868848,"exec_count":28,"id":"2ca20f","input":"dados_new.boxplot(['Valor'], by = ['Tipo'])","kernel":"python3","output":{"0":{"data":{"text/plain":"<AxesSubplot:title={'center':'Valor'}, xlabel='[Tipo]'>"},"exec_count":28},"1":{"data":{"image/png":"5c4f3d3c7445094463666e803941c7872bfe624a","text/plain":"<Figure size 1008x432 with 1 Axes>"},"metadata":{"image/png":{"height":402,"width":859},"needs_background":"light"}}},"pos":42,"start":1627076868425,"state":"done","type":"cell"}
{"cell_type":"code","end":1627076868948,"exec_count":29,"id":"8fcf18","input":"# Agora com os dados limpos, temos que salvar para usar em análises posteriores\ndados_new.to_csv('dados/aluguel_residencial_sem_outliers.csv', sep = ';', index = False)","kernel":"python3","pos":44,"start":1627076868855,"state":"done","type":"cell"}
{"cell_type":"code","end":1627076868999,"exec_count":30,"id":"8b3832","input":"# Seleção apenas Tipo Casa que esteja dentro dos limites do boxplot\ndados_new = pd.DataFrame()\nfor tipo in grupo_tipo.groups.keys():\n    eh_tipo = dados['Tipo'] == 'Casa'\n    eh_dentro_limite = (dados['Valor'] >= limite_inferior['Casa']) & (dados['Valor'] <= limite_superior['Casa'])\n    selecao = eh_tipo & eh_dentro_limite\n    dados_selecao = dados[selecao]\n    dados_new = pd.concat([dados_new, dados_selecao])","kernel":"python3","pos":46,"start":1627076868956,"state":"done","type":"cell"}
{"cell_type":"code","end":1627076869274,"exec_count":31,"id":"4d5459","input":"dados_new.boxplot(['Valor'], by = ['Tipo'])","kernel":"python3","output":{"0":{"data":{"text/plain":"<AxesSubplot:title={'center':'Valor'}, xlabel='[Tipo]'>"},"exec_count":31},"1":{"data":{"image/png":"e549185022c3e9091f7d9d8a709d944a8272db56","text/plain":"<Figure size 1008x432 with 1 Axes>"},"metadata":{"image/png":{"height":402,"width":859},"needs_background":"light"}}},"pos":47,"start":1627076869026,"state":"done","type":"cell"}
{"cell_type":"code","end":1627076869307,"exec_count":32,"id":"d0c93f","input":"# Seleção apenas Tipo Casa de Vila que esteja dentro dos limites do boxplot\ndados_new = pd.DataFrame()\nfor tipo in grupo_tipo.groups.keys():\n    eh_tipo = dados['Tipo'] == 'Casa de Vila'\n    eh_dentro_limite = (dados['Valor'] >= limite_inferior['Casa de Vila']) & (dados['Valor'] <= limite_superior['Casa de Vila'])\n    selecao = eh_tipo & eh_dentro_limite\n    dados_selecao = dados[selecao]\n    dados_new = pd.concat([dados_new, dados_selecao])","kernel":"python3","pos":48,"start":1627076869287,"state":"done","type":"cell"}
{"cell_type":"code","end":1627076869578,"exec_count":33,"id":"0ca1b8","input":"dados_new.boxplot(['Valor'], by = ['Tipo'])","kernel":"python3","output":{"0":{"data":{"text/plain":"<AxesSubplot:title={'center':'Valor'}, xlabel='[Tipo]'>"},"exec_count":33},"1":{"data":{"image/png":"de48d27ad148ff9cf9eb3298193b6a8eb11ef01f","text/plain":"<Figure size 1008x432 with 1 Axes>"},"metadata":{"image/png":{"height":402,"width":853},"needs_background":"light"}}},"pos":49,"start":1627076869336,"state":"done","type":"cell"}
{"cell_type":"code","end":1627076869615,"exec_count":34,"id":"82aef9","input":"# Seleção apenas Tipo Casa de Condomínio que esteja dentro dos limites do boxplot\ndados_new = pd.DataFrame()\nfor tipo in grupo_tipo.groups.keys():\n    eh_tipo = dados['Tipo'] == 'Casa de Condomínio'\n    eh_dentro_limite = (dados['Valor'] >= limite_inferior['Casa de Condomínio']) & (dados['Valor'] <= limite_superior['Casa de Condomínio'])\n    selecao = eh_tipo & eh_dentro_limite\n    dados_selecao = dados[selecao]\n    dados_new = pd.concat([dados_new, dados_selecao])","kernel":"python3","pos":50,"start":1627076869589,"state":"done","type":"cell"}
{"cell_type":"code","end":1627076870039,"exec_count":35,"id":"0d3fbd","input":"dados_new.boxplot(['Valor'], by = ['Tipo'])","kernel":"python3","output":{"0":{"data":{"text/plain":"<AxesSubplot:title={'center':'Valor'}, xlabel='[Tipo]'>"},"exec_count":35},"1":{"data":{"image/png":"db3b241cfa7df268bf8330b16e54d03988258325","text/plain":"<Figure size 1008x432 with 1 Axes>"},"metadata":{"image/png":{"height":402,"width":859},"needs_background":"light"}}},"pos":51,"start":1627076869625,"state":"done","type":"cell"}
{"cell_type":"code","end":1627076870120,"exec_count":36,"id":"11df32","input":"# Seleção apenas Tipo Apartamento e Quitinete que esteja dentro dos limites do boxplot\ndados_new = pd.DataFrame()\nfor tipo in grupo_tipo.groups.keys():\n    eh_tipo = (dados['Tipo'] == 'Apartamento') | (dados['Tipo'] == 'Quitinete')\n    eh_dentro_limite = (dados['Valor'] >= limite_inferior['Apartamento']) & (dados['Valor'] <= limite_superior['Apartamento']) | (dados['Valor'] >= limite_inferior['Quitinete']) & (dados['Valor'] <= limite_superior['Quitinete'])\n    selecao = eh_tipo & eh_dentro_limite\n    dados_selecao = dados[selecao]\n    dados_new = pd.concat([dados_new, dados_selecao])","kernel":"python3","pos":52,"start":1627076870046,"state":"done","type":"cell"}
{"cell_type":"code","end":1627076870663,"exec_count":37,"id":"2322c7","input":"dados_new.boxplot(['Valor'], by = ['Tipo'])","kernel":"python3","output":{"0":{"data":{"text/plain":"<AxesSubplot:title={'center':'Valor'}, xlabel='[Tipo]'>"},"exec_count":37},"1":{"data":{"image/png":"696605b8ca77cffc6dd5f819b930574a93a4df13","text/plain":"<Figure size 1008x432 with 1 Axes>"},"metadata":{"image/png":{"height":402,"width":859},"needs_background":"light"}}},"pos":53,"start":1627076870131,"state":"done","type":"cell"}
{"cell_type":"code","end":1627076870736,"exec_count":38,"id":"bc44af","input":"dados = pd.read_csv('arquivo_exercicio_cap_9/aluguel_amostra.csv', sep = ';')\n\ndados.head(10)","kernel":"python3","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Tipo</th>\n      <th>Bairro</th>\n      <th>Quartos</th>\n      <th>Vagas</th>\n      <th>Suites</th>\n      <th>Area</th>\n      <th>Valor</th>\n      <th>Condominio</th>\n      <th>IPTU</th>\n      <th>Valor m2</th>\n      <th>Tipo Agregado</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Apartamento</td>\n      <td>Recreio dos Bandeirantes</td>\n      <td>3</td>\n      <td>2</td>\n      <td>1</td>\n      <td>320</td>\n      <td>3200.0</td>\n      <td>1319.0</td>\n      <td>0.0</td>\n      <td>10.00</td>\n      <td>Apartamento</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Apartamento</td>\n      <td>Maracanã</td>\n      <td>2</td>\n      <td>0</td>\n      <td>0</td>\n      <td>59</td>\n      <td>800.0</td>\n      <td>725.0</td>\n      <td>47.0</td>\n      <td>13.56</td>\n      <td>Apartamento</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Apartamento</td>\n      <td>Leblon</td>\n      <td>3</td>\n      <td>2</td>\n      <td>1</td>\n      <td>147</td>\n      <td>7500.0</td>\n      <td>1000.0</td>\n      <td>381.0</td>\n      <td>51.02</td>\n      <td>Apartamento</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Apartamento</td>\n      <td>São Conrado</td>\n      <td>3</td>\n      <td>3</td>\n      <td>3</td>\n      <td>270</td>\n      <td>14999.0</td>\n      <td>2800.0</td>\n      <td>1200.0</td>\n      <td>55.55</td>\n      <td>Apartamento</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>Apartamento</td>\n      <td>Tijuca</td>\n      <td>2</td>\n      <td>1</td>\n      <td>0</td>\n      <td>65</td>\n      <td>1200.0</td>\n      <td>640.0</td>\n      <td>97.0</td>\n      <td>18.46</td>\n      <td>Apartamento</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>Apartamento</td>\n      <td>Cachambi</td>\n      <td>2</td>\n      <td>1</td>\n      <td>1</td>\n      <td>75</td>\n      <td>1400.0</td>\n      <td>715.0</td>\n      <td>0.0</td>\n      <td>18.67</td>\n      <td>Apartamento</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>Apartamento</td>\n      <td>Glória</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>52</td>\n      <td>1700.0</td>\n      <td>560.0</td>\n      <td>0.0</td>\n      <td>32.69</td>\n      <td>Apartamento</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>Apartamento</td>\n      <td>Engenho Novo</td>\n      <td>2</td>\n      <td>1</td>\n      <td>0</td>\n      <td>70</td>\n      <td>1200.0</td>\n      <td>430.0</td>\n      <td>21.0</td>\n      <td>17.14</td>\n      <td>Apartamento</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>Apartamento</td>\n      <td>Maracanã</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>59</td>\n      <td>1500.0</td>\n      <td>410.0</td>\n      <td>0.0</td>\n      <td>25.42</td>\n      <td>Apartamento</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>Apartamento</td>\n      <td>Flamengo</td>\n      <td>3</td>\n      <td>0</td>\n      <td>0</td>\n      <td>100</td>\n      <td>2500.0</td>\n      <td>980.0</td>\n      <td>105.0</td>\n      <td>25.00</td>\n      <td>Apartamento</td>\n    </tr>\n  </tbody>\n</table>\n</div>","text/plain":"          Tipo                    Bairro  Quartos  Vagas  Suites  Area  \\\n0  Apartamento  Recreio dos Bandeirantes        3      2       1   320   \n1  Apartamento                  Maracanã        2      0       0    59   \n2  Apartamento                    Leblon        3      2       1   147   \n3  Apartamento               São Conrado        3      3       3   270   \n4  Apartamento                    Tijuca        2      1       0    65   \n5  Apartamento                  Cachambi        2      1       1    75   \n6  Apartamento                    Glória        1      0       0    52   \n7  Apartamento              Engenho Novo        2      1       0    70   \n8  Apartamento                  Maracanã        1      1       0    59   \n9  Apartamento                  Flamengo        3      0       0   100   \n\n     Valor  Condominio    IPTU  Valor m2 Tipo Agregado  \n0   3200.0      1319.0     0.0     10.00   Apartamento  \n1    800.0       725.0    47.0     13.56   Apartamento  \n2   7500.0      1000.0   381.0     51.02   Apartamento  \n3  14999.0      2800.0  1200.0     55.55   Apartamento  \n4   1200.0       640.0    97.0     18.46   Apartamento  \n5   1400.0       715.0     0.0     18.67   Apartamento  \n6   1700.0       560.0     0.0     32.69   Apartamento  \n7   1200.0       430.0    21.0     17.14   Apartamento  \n8   1500.0       410.0     0.0     25.42   Apartamento  \n9   2500.0       980.0   105.0     25.00   Apartamento  "},"exec_count":38}},"pos":56,"start":1627076870670,"state":"done","type":"cell"}
{"cell_type":"code","end":1627076870746,"exec_count":39,"id":"98a1e5","input":"valor = dados['Valor m2']","kernel":"python3","pos":57,"start":1627076870743,"state":"done","type":"cell"}
{"cell_type":"code","end":1627076870762,"exec_count":40,"id":"185356","input":"# Calculando o primeiro quartil (Q1)\nQ1 = valor.quantile(.25)\n\n# Calculando o terceiro quartil (Q3)\nQ3 = valor.quantile(.75)\n\n# Intervalo interquartírico\nIIQ = Q3 - Q1\n\n# Limites\nlimite_inferior = Q1 - 1.5 * IIQ\nlimite_superior = Q3 + 1.5 * IIQ","kernel":"python3","pos":59,"start":1627076870752,"state":"done","type":"cell"}
{"cell_type":"code","end":1627076934578,"exec_count":45,"id":"994ed6","input":"print(f\"\"\"\n[Q1] -> {Q1}\n[Q3] -> {Q3}\n[IIQ] -> {IIQ:.2f}\n[limite_inferior] -> {limite_inferior:.2f}\n[limite_superior] -> {limite_superior:.2f}\n\"\"\")","kernel":"python3","output":{"0":{"name":"stdout","text":"\n[Q1] -> 21.25\n[Q3] -> 42.31\n[IIQ] -> 21.06\n[limite_inferior] -> -10.34\n[limite_superior] -> 73.90\n\n"}},"pos":60,"start":1627076934567,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"033af8","input":"## Como um desafio, tentar fazer:","pos":45,"type":"cell"}
{"cell_type":"markdown","id":"06a304","input":"Agora, estudaremos o histograma, isto é, uma distribuição de frequências dos dados. Analisaremos dados e dados_new.","pos":18,"type":"cell"}
{"cell_type":"markdown","id":"092a30","input":"## Fim","pos":62,"type":"cell"}
{"cell_type":"markdown","id":"126564","input":"Temos uma análise mais fina agora para, por exemplo, Casa de Condomínio que possui um alto padrão.    \nPara imóveis de baixo custo, como quitinete teremos outra representação.","pos":43,"type":"cell"}
{"cell_type":"markdown","id":"1ac1b3","input":"Assim feito, estamos prontos para criar as estatísticas, utilizando a metodologia que já conhecemos:","pos":29,"type":"cell"}
{"cell_type":"markdown","id":"1dd591","input":"OBS: Lembrando que aqui temos os dados completos.   \nVamos fazer o corte e salvar pra poder usar posteriormente.","pos":10,"type":"cell"}
{"cell_type":"markdown","id":"218325","input":"Para dados, teremos apenas uma barra, mas depois teremos uma distribuição de barras que nos permite algumas análises.    \nVariáveis deste tipo, de valor, render, e outras coisas, são assimétricas à direita. Tem a moda < mediana < média.    \nJá temos dados um pouco melhores no segundo histograma, mas seriam necessários alguns tratamentos antes de utilizar essas informações em uma regressão, por exemplo.","pos":20,"type":"cell"}
{"cell_type":"markdown","id":"43616f","input":"## Identificando e Removendo Outliers","pos":1,"type":"cell"}
{"cell_type":"markdown","id":"6882dd","input":"Faremos efetivamente nosso box-plot.","pos":6,"type":"cell"}
{"cell_type":"markdown","id":"799f22","input":"__Agora usaremos ainda a mesma metodologia, mas iremos desagrupar os dados e fazer uma análise modular.__","pos":21,"type":"cell"}
{"cell_type":"markdown","id":"86855c","input":"Na primeira interação, dados_new estará vazio, e então seria inserido o dados_selecao,    \nem que o primeiro item é Apartamento. Esse processo será repetido com todos os outros tipos de imóvel.    \nApós executarmos nosso código, podemos gerar um novo box-plot que utilize dados_new :","pos":41,"type":"cell"}
{"cell_type":"markdown","id":"892f00","input":"```\n[Q1] → 21.25\n[Q3] → 42.31\n[IIQ] → 21.06\n[Q1 - 1.5 * IIQ] → -10.34\n[Q3 + 1.5 * IIQ] → 73.90\n```","pos":58,"type":"cell"}
{"cell_type":"markdown","id":"8cd7be","input":"#### 01 - Estatísticas do box plot\n\nConsidere a imagem do box plot, exibida anteriormente.\n\nNosso objetivo neste exercício é obter o conjunto de estatísticas representado na figura acima. Para isso, baixe aqui o arquivo aluguel_amostra.csv, e utilize-o para realizar suas análises utilizando como variável alvo o Valor m2 (valor do metro quadrado). Lembrando que Q1 representa o 1º quartil e Q3 o 3º quartil, selecione o item com a resposta correta (considere somente duas casas decimais):\n","pos":55,"type":"cell"}
{"cell_type":"markdown","id":"9c27c4","input":"# Relatório de Análise 8","pos":0,"type":"cell"}
{"cell_type":"markdown","id":"9ffdb8","input":"## Exercícios","pos":54,"type":"cell"}
{"cell_type":"markdown","id":"a3b25c","input":"Teremos uma representação gráfica que nos ajudará a compreender a técnica que usaremos nesta aula para remoção de outliers. Estamos utilziando Box-plot, que possui a seguinte configuração: temos uma mediana, em que dividimos os dados em 50%, para a direita e esquerda, igualmente. Teremos o Q1, que se refere ao primeiro quartil e parte em 25% e 75%, já o Q3 parte os dados em 75% e 25%. A diferente entre Q3 e Q1 gera o intervalo interquartirico, isto é, as estatísticas que geraremos para realizar o corte de outliers.","pos":4,"type":"cell"}
{"cell_type":"markdown","id":"a40e25","input":"A visualização está comprometida, afinal ele está invertido e só conseguimos perceber os dados discrepantes. Primeiramente, faremos uma visualização clara dos dados ao realizar uma seleção em nosso dataframe.","pos":8,"type":"cell"}
{"cell_type":"markdown","id":"cc2ac4","input":"Podemos ter informações discrepantes para um tipo de imóvel que não estão em outro, e isso pode atrapalhar nossa análise caso todos os dados sejam analisados de maneira conjunta. Temos comportamentos diferentes em cada tipo de imóvel, como locações caras para condomínios de alto padrão que nunca se aplicariam a uma quitinete.\n\n__Faremos a análise para os grupos que selecionamos.__","pos":23,"type":"cell"}
{"cell_type":"markdown","id":"f2e140","input":"## Histograma","pos":17,"type":"cell"}
{"cell_type":"markdown","id":"fad2a3","input":"__Como Cientistas de Dados, devemos analisar essa informação atentamente.   \nNosso box-plot indica ue temos dados discrepantes de 10000 de condomínio, mas em nosso banco de dados realmente    \nexistem imóveis de alto padrão que apresentam esse valor.   \nÉ recomendado que se analise outras variáveis para chegar em um resultado mais preciso.   \nFica de exercício, por exemplo, separar os imóveis em bases diferentes (alto padrão, médio e baixo padrão)__","pos":16,"type":"cell"}
{"cell_type":"markdown","id":"fafe24","input":"Feito assim, criaremos um dataframe com esta seleção que realizamos. Chamaremos de dados_selecao , que receberá dados[selecao].\n\nNós queremos que esse procedimento seja feito com todos os tipos de imóvel, e então concatenar essas informações.    \nJá sabemos realizar concatenações, e para deixar o processo todo ainda mais claro, criaremos um novo dataframe zerado    \nno começo do código chamado dados_new.\n\nEm seguida, utilizaremos concat() receberá os dois dataframes em lista. ","pos":39,"type":"cell"}
{"end":1627077208255,"exec_count":48,"id":"144a36","input":"%matplotlib inline\nimport pandas as pd\nimport matplotlib.pyplot as plt\nplt.rc('figure', figsize = (15, 7))\n\ndados = pd.read_csv('arquivo_exercicio_cap_9/aluguel_amostra.csv', sep = ';')","kernel":"python3","pos":60.75,"start":1627077208219,"state":"done","type":"cell"}
{"end":1627077278780,"exec_count":49,"id":"d27e1c","input":"area = plt.figure()\ng1 = area.add_subplot(1, 2, 1)\ng2 = area.add_subplot(1, 2, 2)\n\ngrupo1 = dados.groupby('Tipo Agregado')['Valor']\nlabel = grupo1.count().index\nvalores = grupo1.count().values\ng1.pie(valores, labels = label, autopct='%1.1f%%')\ng1.set_title('Total de Imóveis por Tipo Agregado')\n\ngrupo2 = dados.groupby('Tipo')['Valor']\nlabel = grupo2.count().index\nvalores = grupo2.count().values\ng2.pie(valores, labels = label, autopct='%1.1f%%', explode = (.1, .1, .1, .1, .1))\ng2.set_title('Total de Imóveis por Tipo')","kernel":"python3","output":{"0":{"data":{"text/plain":"Text(0.5, 1.0, 'Total de Imóveis por Tipo')"},"exec_count":49},"1":{"data":{"image/png":"3ac8e1319db9981a7ccbcc18fb8c5848e25f702e","text/plain":"<Figure size 1080x504 with 2 Axes>"},"metadata":{"image/png":{"height":411,"width":963}}}},"pos":60.875,"start":1627077278366,"state":"done","type":"cell"}
{"last_load":1627076851050,"type":"file"}