{"backend_state":"running","connection_file":"/tmp/xdg-runtime-user/jupyter/kernel-071c1110-4da7-4faa-a109-fc9d4b19ff29.json","kernel":"python3","kernel_error":"","kernel_state":"idle","kernel_usage":{"cpu":0,"memory":0},"trust":true,"type":"settings"}
{"cell_type":"markdown","exec_count":36,"id":"3e927f","input":"<font color='green'>__>>> Corrigindo!__</font>","kernel":"python3","pos":11.3125,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"29846e","input":"#### Podemos ver que a quantidade de imóveis com 1 e 2 quartos aumentou, porque tem pessoas declarando que o imóvel tem 0 quartos.\n\n<font color='red'>__>>> Precisamos corrigir isto!__</font>","pos":11.25,"type":"cell"}
{"cell_type":"markdown","id":"3e983a","input":"O que queremos é gerar uma distribuição de frequência, tal qual aprendemos na aula anterior (usando value_counts()).    \nQueremos contar a quantidade de imóveis que possuem de 1 a 2 quartos; depois 3 e 4 quartos; 5 e 6 e a faixa final de 7 ou mais quartos.","pos":2.5,"type":"cell"}
{"cell_type":"markdown","id":"4519db","input":"# Criando Faixas de Valor","pos":0,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"63b6ee","input":"## Fim","pos":14,"type":"cell"}
{"end":1627014435104,"exec_count":24,"id":"43b68d","input":"import pandas as pd","kernel":"python3","pos":1,"start":1627014435097,"state":"done","type":"cell"}
{"end":1627014435158,"exec_count":25,"id":"b54c4e","input":"dados = pd.read_csv('dados/aluguel.csv', sep = ';')\ndados.head(10)","kernel":"python3","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Tipo</th>\n      <th>Bairro</th>\n      <th>Quartos</th>\n      <th>Vagas</th>\n      <th>Suites</th>\n      <th>Area</th>\n      <th>Valor</th>\n      <th>Condominio</th>\n      <th>IPTU</th>\n      <th>Valor m2</th>\n      <th>Tipo Agregado</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Apartamento</td>\n      <td>Centro</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>15</td>\n      <td>800.0</td>\n      <td>390.0</td>\n      <td>20.0</td>\n      <td>53.33</td>\n      <td>Apartamento</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Apartamento</td>\n      <td>Higienópolis</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>48</td>\n      <td>800.0</td>\n      <td>230.0</td>\n      <td>0.0</td>\n      <td>16.67</td>\n      <td>Apartamento</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Apartamento</td>\n      <td>Cachambi</td>\n      <td>2</td>\n      <td>0</td>\n      <td>0</td>\n      <td>50</td>\n      <td>1300.0</td>\n      <td>301.0</td>\n      <td>17.0</td>\n      <td>26.00</td>\n      <td>Apartamento</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Apartamento</td>\n      <td>Grajaú</td>\n      <td>2</td>\n      <td>1</td>\n      <td>0</td>\n      <td>70</td>\n      <td>1500.0</td>\n      <td>642.0</td>\n      <td>74.0</td>\n      <td>21.43</td>\n      <td>Apartamento</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>Apartamento</td>\n      <td>Lins de Vasconcelos</td>\n      <td>3</td>\n      <td>1</td>\n      <td>1</td>\n      <td>90</td>\n      <td>1500.0</td>\n      <td>455.0</td>\n      <td>14.0</td>\n      <td>16.67</td>\n      <td>Apartamento</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>Apartamento</td>\n      <td>Copacabana</td>\n      <td>1</td>\n      <td>0</td>\n      <td>1</td>\n      <td>40</td>\n      <td>2000.0</td>\n      <td>561.0</td>\n      <td>50.0</td>\n      <td>50.00</td>\n      <td>Apartamento</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>Apartamento</td>\n      <td>Freguesia (Jacarepaguá)</td>\n      <td>3</td>\n      <td>0</td>\n      <td>0</td>\n      <td>54</td>\n      <td>950.0</td>\n      <td>300.0</td>\n      <td>28.0</td>\n      <td>17.59</td>\n      <td>Apartamento</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>Apartamento</td>\n      <td>Barra da Tijuca</td>\n      <td>2</td>\n      <td>1</td>\n      <td>1</td>\n      <td>67</td>\n      <td>1700.0</td>\n      <td>589.0</td>\n      <td>147.0</td>\n      <td>25.37</td>\n      <td>Apartamento</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>Apartamento</td>\n      <td>Tijuca</td>\n      <td>2</td>\n      <td>1</td>\n      <td>0</td>\n      <td>110</td>\n      <td>1900.0</td>\n      <td>700.0</td>\n      <td>138.0</td>\n      <td>17.27</td>\n      <td>Apartamento</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>Apartamento</td>\n      <td>Olaria</td>\n      <td>3</td>\n      <td>1</td>\n      <td>0</td>\n      <td>68</td>\n      <td>1000.0</td>\n      <td>670.0</td>\n      <td>0.0</td>\n      <td>14.71</td>\n      <td>Apartamento</td>\n    </tr>\n  </tbody>\n</table>\n</div>","text/plain":"          Tipo                   Bairro  Quartos  Vagas  Suites  Area   Valor  \\\n0  Apartamento                   Centro        1      0       0    15   800.0   \n1  Apartamento             Higienópolis        1      0       0    48   800.0   \n2  Apartamento                 Cachambi        2      0       0    50  1300.0   \n3  Apartamento                   Grajaú        2      1       0    70  1500.0   \n4  Apartamento      Lins de Vasconcelos        3      1       1    90  1500.0   \n5  Apartamento               Copacabana        1      0       1    40  2000.0   \n6  Apartamento  Freguesia (Jacarepaguá)        3      0       0    54   950.0   \n7  Apartamento          Barra da Tijuca        2      1       1    67  1700.0   \n8  Apartamento                   Tijuca        2      1       0   110  1900.0   \n9  Apartamento                   Olaria        3      1       0    68  1000.0   \n\n   Condominio   IPTU  Valor m2 Tipo Agregado  \n0       390.0   20.0     53.33   Apartamento  \n1       230.0    0.0     16.67   Apartamento  \n2       301.0   17.0     26.00   Apartamento  \n3       642.0   74.0     21.43   Apartamento  \n4       455.0   14.0     16.67   Apartamento  \n5       561.0   50.0     50.00   Apartamento  \n6       300.0   28.0     17.59   Apartamento  \n7       589.0  147.0     25.37   Apartamento  \n8       700.0  138.0     17.27   Apartamento  \n9       670.0    0.0     14.71   Apartamento  "},"exec_count":25}},"pos":2,"start":1627014435108,"state":"done","type":"cell"}
{"end":1627014435184,"exec_count":26,"id":"cf31fc","input":"# Vamos criar classes e devemos passar os valores mínimo, máximo e os limites das classes\n\n# 1 e 2\n# 3 e 4\n# 5 e 6\n# 7 ou mais\nclasses = [0, 2, 4, 6, 100]","kernel":"python3","pos":3,"start":1627014435182,"state":"done","type":"cell"}
{"end":1627014435205,"exec_count":27,"id":"180290","input":"# Vamos criar um DataFrame categorizado. O cut() vai ajudar nisso\nquartos = pd.cut(dados.Quartos, classes)","kernel":"python3","pos":4,"start":1627014435198,"state":"done","type":"cell"}
{"end":1627014435220,"exec_count":28,"id":"c9f094","input":"quartos","kernel":"python3","output":{"0":{"data":{"text/plain":"0        (0.0, 2.0]\n1        (0.0, 2.0]\n2        (0.0, 2.0]\n3        (0.0, 2.0]\n4        (2.0, 4.0]\n            ...    \n19826    (0.0, 2.0]\n19827    (0.0, 2.0]\n19828    (0.0, 2.0]\n19829    (0.0, 2.0]\n19830           NaN\nName: Quartos, Length: 19831, dtype: category\nCategories (4, interval[int64, right]): [(0, 2] < (2, 4] < (4, 6] < (6, 100]]"},"exec_count":28}},"pos":5,"start":1627014435209,"state":"done","type":"cell"}
{"end":1627014435237,"exec_count":29,"id":"febcae","input":"# Gerando nossa primeira visualização da tabela de frequência\npd.value_counts(quartos)\n\n# Obs: o parêntese é aberto, ou seja, o primeiro valor não entra na conta.\n# E o colchete indica que o intervalo é fechado, ou seja, entra na conta","kernel":"python3","output":{"0":{"data":{"text/plain":"(0, 2]      11074\n(2, 4]       8094\n(4, 6]        470\n(6, 100]       36\nName: Quartos, dtype: int64"},"exec_count":29}},"pos":6,"start":1627014435224,"state":"done","type":"cell"}
{"end":1627014435252,"exec_count":30,"id":"f0eba6","input":"# Melhorando a formatação\nlabels = ['1 e 2 quartos', '3 e 4 quartos', '5 e 6 quartos', '7 quartos ou mais']","kernel":"python3","pos":7,"start":1627014435242,"state":"done","type":"cell"}
{"end":1627014435269,"exec_count":31,"id":"ed4699","input":"quartos = pd.cut(dados.Quartos, classes, labels = labels)","kernel":"python3","pos":8,"start":1627014435255,"state":"done","type":"cell"}
{"end":1627014435291,"exec_count":32,"id":"0e103f","input":"pd.value_counts(quartos)","kernel":"python3","output":{"0":{"data":{"text/plain":"1 e 2 quartos        11074\n3 e 4 quartos         8094\n5 e 6 quartos          470\n7 quartos ou mais       36\nName: Quartos, dtype: int64"},"exec_count":32}},"pos":9,"start":1627014435273,"state":"done","type":"cell"}
{"end":1627014435310,"exec_count":33,"id":"cdf8d5","input":"# Método para incluir o valor mais baixo, no caso, o zero\nquartos = pd.cut(dados.Quartos, classes, labels = labels, include_lowest = True)","kernel":"python3","pos":10,"start":1627014435295,"state":"done","type":"cell"}
{"end":1627014435494,"exec_count":34,"id":"2e5421","input":"pd.value_counts(quartos)","kernel":"python3","output":{"0":{"data":{"text/plain":"1 e 2 quartos        11231\n3 e 4 quartos         8094\n5 e 6 quartos          470\n7 quartos ou mais       36\nName: Quartos, dtype: int64"},"exec_count":34}},"pos":11,"start":1627014435314,"state":"done","type":"cell"}
{"end":1627014435503,"id":"135fac","input":"# Melhorando a formatação\nlabels = ['0 a 2 quartos', '3 e 4 quartos', '5 e 6 quartos', '7 quartos ou mais']","kernel":"python3","pos":11.5,"start":1627014435503,"state":"done","type":"cell"}
{"end":1627014435504,"id":"5f59be","input":"# Método para incluir o valor mais baixo, no caso, o zero\nquartos = pd.cut(dados.Quartos, classes, labels = labels, include_lowest = True)","kernel":"python3","pos":12,"start":1627014435504,"state":"done","type":"cell"}
{"end":1627014435505,"id":"342590","input":"pd.value_counts(quartos)","kernel":"python3","pos":13,"start":1627014435505,"state":"done","type":"cell"}
{"last_load":1627013270991,"type":"file"}