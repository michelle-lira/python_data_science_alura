{"backend_state":"running","connection_file":"/tmp/xdg-runtime-user/jupyter/kernel-7b3e910b-47e6-4860-b133-049e431f8da7.json","kernel":"python3","kernel_error":"","kernel_state":"idle","kernel_usage":{"cpu":0,"memory":0},"trust":true,"type":"settings"}
{"cell_type":"markdown","id":"12e8fb","input":"#### Método bfill()\n\n__O que o bfill() faz?__   \nEle faz o contrário do ffill() e começa checando os valores de baixo para cima.    ","pos":9,"type":"cell"}
{"cell_type":"markdown","id":"1d7247","input":"## Fim","pos":14,"type":"cell"}
{"cell_type":"markdown","id":"280086","input":"## Outros métodos de fazer a interpolação","pos":5,"type":"cell"}
{"cell_type":"markdown","id":"8927ef","input":"#### Método ffill()\n\n__O que o ffill() faz?__   \nEle começa checando os valores de cima para baixo.    \nAssim que encontra um valor válido antes de um nulo, ele pega o valor da última assinatura válida e repete onde\nestava nulo.\n\nEsses métodos são muito válidos quanto estamos trabalhando com uma série de tempo, em que podemos encontrar dados    \nnulos que podem ser preenchidos de forma rápida, tornando seu modelo executável. (Não é o mais utilizado)","pos":7,"type":"cell"}
{"cell_type":"markdown","id":"c4253a","input":"# Métodos de Interpolação","pos":0,"type":"cell"}
{"cell_type":"markdown","id":"d76931","input":"#### Outra forma de fazer sem utilizar método:","pos":12,"type":"cell"}
{"end":1626996998581,"exec_count":2,"id":"92ea44","input":"import pandas as pd","kernel":"python3","pos":1,"start":1626996998138,"state":"done","type":"cell"}
{"end":1626997409512,"exec_count":15,"id":"babfdf","input":"data = [0.5, None, None, 0.52, 0.54, None, None, 0.59, 0.6, 0.7]\ns = pd.Series(data)","kernel":"python3","pos":2,"start":1626997409502,"state":"done","type":"cell"}
{"end":1626997415975,"exec_count":16,"id":"2cd19c","input":"s","kernel":"python3","output":{"0":{"data":{"text/plain":"0    0.50\n1     NaN\n2     NaN\n3    0.52\n4    0.54\n5     NaN\n6     NaN\n7    0.59\n8    0.60\n9    0.70\ndtype: float64"},"exec_count":16}},"pos":3,"start":1626997415970,"state":"done","type":"cell"}
{"end":1626997420117,"exec_count":17,"id":"4493dd","input":"# Preenchendo os dados faltantes da Series com 0\ns.fillna(0)","kernel":"python3","output":{"0":{"data":{"text/plain":"0    0.50\n1    0.00\n2    0.00\n3    0.52\n4    0.54\n5    0.00\n6    0.00\n7    0.59\n8    0.60\n9    0.70\ndtype: float64"},"exec_count":17}},"pos":4,"start":1626997420110,"state":"done","type":"cell"}
{"end":1626997424862,"exec_count":18,"id":"3ef3fb","input":"s","kernel":"python3","output":{"0":{"data":{"text/plain":"0    0.50\n1     NaN\n2     NaN\n3    0.52\n4    0.54\n5     NaN\n6     NaN\n7    0.59\n8    0.60\n9    0.70\ndtype: float64"},"exec_count":18}},"pos":6,"start":1626997424855,"state":"done","type":"cell"}
{"end":1626997430384,"exec_count":19,"id":"2ac7cf","input":"s.fillna(method = 'ffill')","kernel":"python3","output":{"0":{"data":{"text/plain":"0    0.50\n1    0.50\n2    0.50\n3    0.52\n4    0.54\n5    0.54\n6    0.54\n7    0.59\n8    0.60\n9    0.70\ndtype: float64"},"exec_count":19}},"pos":8,"start":1626997430378,"state":"done","type":"cell"}
{"end":1626997436156,"exec_count":20,"id":"8f2b9d","input":"s.fillna(method = 'bfill')","kernel":"python3","output":{"0":{"data":{"text/plain":"0    0.50\n1    0.52\n2    0.52\n3    0.52\n4    0.54\n5    0.59\n6    0.59\n7    0.59\n8    0.60\n9    0.70\ndtype: float64"},"exec_count":20}},"pos":10,"start":1626997436150,"state":"done","type":"cell"}
{"end":1626997442974,"exec_count":21,"id":"4f3827","input":"s","kernel":"python3","output":{"0":{"data":{"text/plain":"0    0.50\n1     NaN\n2     NaN\n3    0.52\n4    0.54\n5     NaN\n6     NaN\n7    0.59\n8    0.60\n9    0.70\ndtype: float64"},"exec_count":21}},"pos":10.5,"start":1626997442969,"state":"done","type":"cell"}
{"end":1626997447962,"exec_count":22,"id":"72930e","input":"# Aplicando o ffill apenas uma vez por nulo\ns.fillna(method = 'ffill', limit = 1)","kernel":"python3","output":{"0":{"data":{"text/plain":"0    0.50\n1    0.50\n2     NaN\n3    0.52\n4    0.54\n5    0.54\n6     NaN\n7    0.59\n8    0.60\n9    0.70\ndtype: float64"},"exec_count":22}},"pos":11,"start":1626997447957,"state":"done","type":"cell"}
{"end":1626997491758,"exec_count":26,"id":"6ff59b","input":"# Inserindo a média de todos os valores que não são nulos, como preenchimento dos nulos\ns.fillna(s.mean())","kernel":"python3","output":{"0":{"data":{"text/plain":"0    0.500\n1    0.575\n2    0.575\n3    0.520\n4    0.540\n5    0.575\n6    0.575\n7    0.590\n8    0.600\n9    0.700\ndtype: float64"},"exec_count":26}},"pos":13,"start":1626997491752,"state":"done","type":"cell"}
{"end":1626997569112,"exec_count":27,"id":"a4efea","input":"# Preenchendo de baixo pra cima apenas uma vez, e assim, complementando as lacunas de valores vazios\ns1.fillna(method = 'bfill', limit = 1)","kernel":"python3","output":{"0":{"data":{"text/plain":"0    0.50\n1    0.50\n2    0.52\n3    0.52\n4    0.54\n5    0.54\n6    0.59\n7    0.59\n8    0.60\n9    0.70\ndtype: float64"},"exec_count":27}},"pos":11.75,"start":1626997569107,"state":"done","type":"cell"}
{"exec_count":25,"id":"797044","input":"# Armazenando na variável s1\ns1 = s.fillna(method = 'ffill', limit = 1)\ns1","kernel":"python3","output":{"0":{"data":{"text/plain":"0    0.50\n1    0.50\n2     NaN\n3    0.52\n4    0.54\n5    0.54\n6     NaN\n7    0.59\n8    0.60\n9    0.70\ndtype: float64"},"exec_count":25}},"pos":11.5,"state":"done","type":"cell"}
{"id":0,"time":1626997988463,"type":"user"}
{"last_load":1626985599063,"type":"file"}