{"backend_state":"running","connection_file":"/tmp/xdg-runtime-user/jupyter/kernel-3432809d-f70e-46d4-a099-aa897c19ff10.json","kernel":"python3","kernel_error":"","kernel_state":"idle","kernel_usage":{"cpu":0,"memory":0},"metadata":{"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.8.10"}},"trust":true,"type":"settings"}
{"cell_type":"code","end":1626969375124,"exec_count":1,"id":"ba7801","input":"import pandas as pd","kernel":"python3","pos":2,"start":1626969374653,"state":"done","type":"cell"}
{"cell_type":"code","end":1626969375278,"exec_count":2,"id":"c1889f","input":"dados = pd.read_csv('dados/aluguel.csv', sep=';')","kernel":"python3","pos":3,"start":1626969375131,"state":"done","type":"cell"}
{"cell_type":"code","end":1626969375450,"exec_count":3,"id":"4a3b91","input":"dados.head(10)","kernel":"python3","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Tipo</th>\n      <th>Bairro</th>\n      <th>Quartos</th>\n      <th>Vagas</th>\n      <th>Suites</th>\n      <th>Area</th>\n      <th>Valor</th>\n      <th>Condominio</th>\n      <th>IPTU</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Quitinete</td>\n      <td>Copacabana</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>40</td>\n      <td>1700.0</td>\n      <td>500.0</td>\n      <td>60.0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Casa</td>\n      <td>Jardim Botânico</td>\n      <td>2</td>\n      <td>0</td>\n      <td>1</td>\n      <td>100</td>\n      <td>7000.0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Conjunto Comercial/Sala</td>\n      <td>Barra da Tijuca</td>\n      <td>0</td>\n      <td>4</td>\n      <td>0</td>\n      <td>150</td>\n      <td>5200.0</td>\n      <td>4020.0</td>\n      <td>1111.0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Apartamento</td>\n      <td>Centro</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>15</td>\n      <td>800.0</td>\n      <td>390.0</td>\n      <td>20.0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>Apartamento</td>\n      <td>Higienópolis</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>48</td>\n      <td>800.0</td>\n      <td>230.0</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>Apartamento</td>\n      <td>Vista Alegre</td>\n      <td>3</td>\n      <td>1</td>\n      <td>0</td>\n      <td>70</td>\n      <td>1200.0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>Apartamento</td>\n      <td>Cachambi</td>\n      <td>2</td>\n      <td>0</td>\n      <td>0</td>\n      <td>50</td>\n      <td>1300.0</td>\n      <td>301.0</td>\n      <td>17.0</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>Casa de Condomínio</td>\n      <td>Barra da Tijuca</td>\n      <td>5</td>\n      <td>4</td>\n      <td>5</td>\n      <td>750</td>\n      <td>22000.0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>Casa de Condomínio</td>\n      <td>Ramos</td>\n      <td>2</td>\n      <td>2</td>\n      <td>0</td>\n      <td>65</td>\n      <td>1000.0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>Conjunto Comercial/Sala</td>\n      <td>Centro</td>\n      <td>0</td>\n      <td>3</td>\n      <td>0</td>\n      <td>695</td>\n      <td>35000.0</td>\n      <td>19193.0</td>\n      <td>3030.0</td>\n    </tr>\n  </tbody>\n</table>\n</div>","text/plain":"                      Tipo           Bairro  Quartos  Vagas  Suites  Area  \\\n0                Quitinete       Copacabana        1      0       0    40   \n1                     Casa  Jardim Botânico        2      0       1   100   \n2  Conjunto Comercial/Sala  Barra da Tijuca        0      4       0   150   \n3              Apartamento           Centro        1      0       0    15   \n4              Apartamento     Higienópolis        1      0       0    48   \n5              Apartamento     Vista Alegre        3      1       0    70   \n6              Apartamento         Cachambi        2      0       0    50   \n7       Casa de Condomínio  Barra da Tijuca        5      4       5   750   \n8       Casa de Condomínio            Ramos        2      2       0    65   \n9  Conjunto Comercial/Sala           Centro        0      3       0   695   \n\n     Valor  Condominio    IPTU  \n0   1700.0       500.0    60.0  \n1   7000.0         NaN     NaN  \n2   5200.0      4020.0  1111.0  \n3    800.0       390.0    20.0  \n4    800.0       230.0     NaN  \n5   1200.0         NaN     NaN  \n6   1300.0       301.0    17.0  \n7  22000.0         NaN     NaN  \n8   1000.0         NaN     NaN  \n9  35000.0     19193.0  3030.0  "},"exec_count":3}},"pos":4,"start":1626969375441,"state":"done","type":"cell"}
{"cell_type":"code","end":1626969375466,"exec_count":4,"id":"20e0f6","input":"list(dados['Tipo'].drop_duplicates())","kernel":"python3","output":{"0":{"data":{"text/plain":"['Quitinete',\n 'Casa',\n 'Conjunto Comercial/Sala',\n 'Apartamento',\n 'Casa de Condomínio',\n 'Prédio Inteiro',\n 'Flat',\n 'Loja/Salão',\n 'Galpão/Depósito/Armazém',\n 'Casa Comercial',\n 'Casa de Vila',\n 'Terreno Padrão',\n 'Box/Garagem',\n 'Loft',\n 'Loja Shopping/ Ct Comercial',\n 'Chácara',\n 'Loteamento/Condomínio',\n 'Sítio',\n 'Pousada/Chalé',\n 'Studio',\n 'Hotel',\n 'Indústria']"},"exec_count":4}},"pos":6,"start":1626969375461,"state":"done","type":"cell"}
{"cell_type":"code","end":1626969375488,"exec_count":5,"id":"130349","input":"residencial = ['Quitinete',\n 'Casa',\n 'Apartamento',\n 'Casa de Condomínio',\n 'Casa de Vila']","kernel":"python3","pos":7,"start":1626969375472,"state":"done","type":"cell"}
{"cell_type":"code","end":1626969375516,"exec_count":6,"id":"2c0e93","input":"residencial","kernel":"python3","output":{"0":{"data":{"text/plain":"['Quitinete', 'Casa', 'Apartamento', 'Casa de Condomínio', 'Casa de Vila']"},"exec_count":6}},"pos":8,"start":1626969375493,"state":"done","type":"cell"}
{"cell_type":"code","end":1626969375545,"exec_count":7,"id":"39eec1","input":"# Checando mais uma vez esta o DataFrame, pra poder fazer uma comparação depois de usar o isin()\ndados.head(10)","kernel":"python3","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Tipo</th>\n      <th>Bairro</th>\n      <th>Quartos</th>\n      <th>Vagas</th>\n      <th>Suites</th>\n      <th>Area</th>\n      <th>Valor</th>\n      <th>Condominio</th>\n      <th>IPTU</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Quitinete</td>\n      <td>Copacabana</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>40</td>\n      <td>1700.0</td>\n      <td>500.0</td>\n      <td>60.0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Casa</td>\n      <td>Jardim Botânico</td>\n      <td>2</td>\n      <td>0</td>\n      <td>1</td>\n      <td>100</td>\n      <td>7000.0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Conjunto Comercial/Sala</td>\n      <td>Barra da Tijuca</td>\n      <td>0</td>\n      <td>4</td>\n      <td>0</td>\n      <td>150</td>\n      <td>5200.0</td>\n      <td>4020.0</td>\n      <td>1111.0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Apartamento</td>\n      <td>Centro</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>15</td>\n      <td>800.0</td>\n      <td>390.0</td>\n      <td>20.0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>Apartamento</td>\n      <td>Higienópolis</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>48</td>\n      <td>800.0</td>\n      <td>230.0</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>Apartamento</td>\n      <td>Vista Alegre</td>\n      <td>3</td>\n      <td>1</td>\n      <td>0</td>\n      <td>70</td>\n      <td>1200.0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>Apartamento</td>\n      <td>Cachambi</td>\n      <td>2</td>\n      <td>0</td>\n      <td>0</td>\n      <td>50</td>\n      <td>1300.0</td>\n      <td>301.0</td>\n      <td>17.0</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>Casa de Condomínio</td>\n      <td>Barra da Tijuca</td>\n      <td>5</td>\n      <td>4</td>\n      <td>5</td>\n      <td>750</td>\n      <td>22000.0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>Casa de Condomínio</td>\n      <td>Ramos</td>\n      <td>2</td>\n      <td>2</td>\n      <td>0</td>\n      <td>65</td>\n      <td>1000.0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>Conjunto Comercial/Sala</td>\n      <td>Centro</td>\n      <td>0</td>\n      <td>3</td>\n      <td>0</td>\n      <td>695</td>\n      <td>35000.0</td>\n      <td>19193.0</td>\n      <td>3030.0</td>\n    </tr>\n  </tbody>\n</table>\n</div>","text/plain":"                      Tipo           Bairro  Quartos  Vagas  Suites  Area  \\\n0                Quitinete       Copacabana        1      0       0    40   \n1                     Casa  Jardim Botânico        2      0       1   100   \n2  Conjunto Comercial/Sala  Barra da Tijuca        0      4       0   150   \n3              Apartamento           Centro        1      0       0    15   \n4              Apartamento     Higienópolis        1      0       0    48   \n5              Apartamento     Vista Alegre        3      1       0    70   \n6              Apartamento         Cachambi        2      0       0    50   \n7       Casa de Condomínio  Barra da Tijuca        5      4       5   750   \n8       Casa de Condomínio            Ramos        2      2       0    65   \n9  Conjunto Comercial/Sala           Centro        0      3       0   695   \n\n     Valor  Condominio    IPTU  \n0   1700.0       500.0    60.0  \n1   7000.0         NaN     NaN  \n2   5200.0      4020.0  1111.0  \n3    800.0       390.0    20.0  \n4    800.0       230.0     NaN  \n5   1200.0         NaN     NaN  \n6   1300.0       301.0    17.0  \n7  22000.0         NaN     NaN  \n8   1000.0         NaN     NaN  \n9  35000.0     19193.0  3030.0  "},"exec_count":7}},"pos":11,"start":1626969375521,"state":"done","type":"cell"}
{"cell_type":"code","end":1626969375670,"exec_count":11,"id":"295566","input":"dados_residenciais","kernel":"python3","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Tipo</th>\n      <th>Bairro</th>\n      <th>Quartos</th>\n      <th>Vagas</th>\n      <th>Suites</th>\n      <th>Area</th>\n      <th>Valor</th>\n      <th>Condominio</th>\n      <th>IPTU</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Quitinete</td>\n      <td>Copacabana</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>40</td>\n      <td>1700.0</td>\n      <td>500.0</td>\n      <td>60.0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Casa</td>\n      <td>Jardim Botânico</td>\n      <td>2</td>\n      <td>0</td>\n      <td>1</td>\n      <td>100</td>\n      <td>7000.0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Apartamento</td>\n      <td>Centro</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>15</td>\n      <td>800.0</td>\n      <td>390.0</td>\n      <td>20.0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>Apartamento</td>\n      <td>Higienópolis</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>48</td>\n      <td>800.0</td>\n      <td>230.0</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>Apartamento</td>\n      <td>Vista Alegre</td>\n      <td>3</td>\n      <td>1</td>\n      <td>0</td>\n      <td>70</td>\n      <td>1200.0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>32953</th>\n      <td>Apartamento</td>\n      <td>Méier</td>\n      <td>2</td>\n      <td>0</td>\n      <td>0</td>\n      <td>70</td>\n      <td>900.0</td>\n      <td>490.0</td>\n      <td>48.0</td>\n    </tr>\n    <tr>\n      <th>32955</th>\n      <td>Quitinete</td>\n      <td>Centro</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>27</td>\n      <td>800.0</td>\n      <td>350.0</td>\n      <td>25.0</td>\n    </tr>\n    <tr>\n      <th>32956</th>\n      <td>Apartamento</td>\n      <td>Jacarepaguá</td>\n      <td>3</td>\n      <td>1</td>\n      <td>2</td>\n      <td>78</td>\n      <td>1800.0</td>\n      <td>800.0</td>\n      <td>40.0</td>\n    </tr>\n    <tr>\n      <th>32957</th>\n      <td>Apartamento</td>\n      <td>São Francisco Xavier</td>\n      <td>2</td>\n      <td>1</td>\n      <td>0</td>\n      <td>48</td>\n      <td>1400.0</td>\n      <td>509.0</td>\n      <td>37.0</td>\n    </tr>\n    <tr>\n      <th>32958</th>\n      <td>Apartamento</td>\n      <td>Leblon</td>\n      <td>2</td>\n      <td>0</td>\n      <td>0</td>\n      <td>70</td>\n      <td>3000.0</td>\n      <td>760.0</td>\n      <td>NaN</td>\n    </tr>\n  </tbody>\n</table>\n<p>22580 rows × 9 columns</p>\n</div>","text/plain":"              Tipo                Bairro  Quartos  Vagas  Suites  Area  \\\n0        Quitinete            Copacabana        1      0       0    40   \n1             Casa       Jardim Botânico        2      0       1   100   \n3      Apartamento                Centro        1      0       0    15   \n4      Apartamento          Higienópolis        1      0       0    48   \n5      Apartamento          Vista Alegre        3      1       0    70   \n...            ...                   ...      ...    ...     ...   ...   \n32953  Apartamento                 Méier        2      0       0    70   \n32955    Quitinete                Centro        0      0       0    27   \n32956  Apartamento           Jacarepaguá        3      1       2    78   \n32957  Apartamento  São Francisco Xavier        2      1       0    48   \n32958  Apartamento                Leblon        2      0       0    70   \n\n        Valor  Condominio  IPTU  \n0      1700.0       500.0  60.0  \n1      7000.0         NaN   NaN  \n3       800.0       390.0  20.0  \n4       800.0       230.0   NaN  \n5      1200.0         NaN   NaN  \n...       ...         ...   ...  \n32953   900.0       490.0  48.0  \n32955   800.0       350.0  25.0  \n32956  1800.0       800.0  40.0  \n32957  1400.0       509.0  37.0  \n32958  3000.0       760.0   NaN  \n\n[22580 rows x 9 columns]"},"exec_count":11}},"pos":15,"start":1626969375641,"state":"done","type":"cell"}
{"cell_type":"code","end":1626969812498,"exec_count":13,"id":"d94e0c","input":"# Verificando se foram mantidos apenas os dados selecionados\nlist(dados_residenciais['Tipo'].drop_duplicates())","kernel":"python3","output":{"0":{"data":{"text/plain":"['Quitinete', 'Casa', 'Apartamento', 'Casa de Condomínio', 'Casa de Vila']"},"exec_count":13}},"pos":16,"start":1626969812490,"state":"done","type":"cell"}
{"cell_type":"code","end":1626970504616,"exec_count":23,"id":"8bcd9f","input":"selecao = df['N'].isin([i for i in range(11) if i % 2 == 0])\ndf = df[selecao]\ndf","kernel":"python3","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>N</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>A</th>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>C</th>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>E</th>\n      <td>4</td>\n    </tr>\n    <tr>\n      <th>G</th>\n      <td>6</td>\n    </tr>\n    <tr>\n      <th>I</th>\n      <td>8</td>\n    </tr>\n    <tr>\n      <th>K</th>\n      <td>10</td>\n    </tr>\n  </tbody>\n</table>\n</div>","text/plain":"    N\nA   0\nC   2\nE   4\nG   6\nI   8\nK  10"},"exec_count":23}},"pos":25,"start":1626970504609,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":10,"id":"31cd38","input":"# Criando um DataFrame com as informações selecionadas\ndados_residenciais = dados[selecao]","kernel":"python3","pos":14,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":8,"id":"08f1f8","input":"# Criando uma Series booleana indicando os elementos presentes na seleção de imóveis residenciais\ndados['Tipo'].isin(residencial).head(10)","kernel":"python3","output":{"0":{"data":{"text/plain":"0     True\n1     True\n2    False\n3     True\n4     True\n5     True\n6     True\n7     True\n8     True\n9    False\nName: Tipo, dtype: bool"},"exec_count":8}},"pos":12,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":9,"id":"4169d4","input":"# Armazenando a seleção de imóveis residenciais em uma variável\nselecao = dados['Tipo'].isin(residencial)\nselecao","kernel":"python3","output":{"0":{"data":{"text/plain":"0         True\n1         True\n2        False\n3         True\n4         True\n         ...  \n32955     True\n32956     True\n32957     True\n32958     True\n32959    False\nName: Tipo, Length: 32960, dtype: bool"},"exec_count":9}},"pos":13,"state":"done","type":"cell"}
{"cell_type":"markdown","exec_count":21,"id":"5c66b9","input":"## 01 - Determinando seleções\n\nVeja o código que cria um DataFrame de letras e números.","kernel":"python3","pos":23,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"03fa89","input":"## Exercícios","pos":22,"type":"cell"}
{"cell_type":"markdown","id":"13b48f","input":"#### Requisitos: Temos que trabalhar com a variável tipo e quando não for um imóvel residencial, remover da visualização","pos":5,"type":"cell"}
{"cell_type":"markdown","id":"46f0cf","input":"## Utilizando o método isin()","pos":9,"type":"cell"}
{"cell_type":"markdown","id":"4d57d0","input":"Obs: Fique a vontade de testar o código no seu Jupyter!\n\nMarque na resposta a alternativa correspondente à saída do código.","pos":26,"type":"cell"}
{"cell_type":"markdown","id":"55d2d9","input":"## Exportando a Base de Dados","pos":20.5,"type":"cell"}
{"cell_type":"markdown","id":"7e5506","input":"#### Após clicar shift + tab dentro do parêntese para ver as opções, temos os seguintes argumentos:\n\nSignature:\ndados_residenciais.to_csv(\n    path_or_buf: 'FilePathOrBuffer[AnyStr] | None' = None,\n    sep: 'str' = ',',\n    na_rep: 'str' = '',\n    float_format: 'str | None' = None,\n    columns: 'Sequence[Hashable] | None' = None,\n    header: 'bool_t | list[str]' = True,\n    index: 'bool_t' = True,\n    index_label: 'IndexLabel | None' = None,\n    mode: 'str' = 'w',\n    encoding: 'str | None' = None,\n    compression: 'CompressionOptions' = 'infer',\n    quoting: 'int | None' = None,\n    quotechar: 'str' = '\"',\n    line_terminator: 'str | None' = None,\n    chunksize: 'int | None' = None,\n    date_format: 'str | None' = None,\n    doublequote: 'bool_t' = True,\n    escapechar: 'str | None' = None,\n    decimal: 'str' = '.',\n    errors: 'str' = 'strict',\n    storage_options: 'StorageOptions' = None,\n) -> 'str | None'\nDocstring:\nWrite object to a comma-separated values (csv) file.\n\nParameters\n----------\npath_or_buf : str or file handle, default None\n    File path or object, if None is provided the result is returned as\n    a string.  If a non-binary file object is passed, it should be opened\n    with `newline=''`, disabling universal newlines. If a binary\n    file object is passed, `mode` might need to contain a `'b'`.\n\n    .. versionchanged:: 1.2.0\n\n       Support for binary file objects was introduced.\n\nsep : str, default ','\n    String of length 1. Field delimiter for the output file.\nna_rep : str, default ''\n    Missing data representation.\nfloat_format : str, default None\n    Format string for floating point numbers.\ncolumns : sequence, optional\n    Columns to write.\nheader : bool or list of str, default True\n    Write out the column names. If a list of strings is given it is\n    assumed to be aliases for the column names.\nindex : bool, default True\n    Write row names (index).\nindex_label : str or sequence, or False, default None\n    Column label for index column(s) if desired. If None is given, and\n    `header` and `index` are True, then the index names are used. A\n    sequence should be given if the object uses MultiIndex. If\n    False do not print fields for index names. Use index_label=False\n    for easier importing in R.\nmode : str\n    Python write mode, default 'w'.\nencoding : str, optional\n    A string representing the encoding to use in the output file,\n    defaults to 'utf-8'. `encoding` is not supported if `path_or_buf`\n    is a non-binary file object.\ncompression : str or dict, default 'infer'\n    If str, represents compression mode. If dict, value at 'method' is\n    the compression mode. Compression mode may be any of the following\n    possible values: {'infer', 'gzip', 'bz2', 'zip', 'xz', None}. If\n    compression mode is 'infer' and `path_or_buf` is path-like, then\n    detect compression mode from the following extensions: '.gz',\n    '.bz2', '.zip' or '.xz'. (otherwise no compression). If dict given\n    and mode is one of {'zip', 'gzip', 'bz2'}, or inferred as\n    one of the above, other entries passed as\n    additional compression options.\n\n    .. versionchanged:: 1.0.0\n\n       May now be a dict with key 'method' as compression mode\n       and other entries as additional compression options if\n       compression mode is 'zip'.\n\n    .. versionchanged:: 1.1.0\n\n       Passing compression options as keys in dict is\n       supported for compression modes 'gzip' and 'bz2'\n       as well as 'zip'.\n\n    .. versionchanged:: 1.2.0\n\n        Compression is supported for binary file objects.\n\n    .. versionchanged:: 1.2.0\n\n        Previous versions forwarded dict entries for 'gzip' to\n        `gzip.open` instead of `gzip.GzipFile` which prevented\n        setting `mtime`.\n\nquoting : optional constant from csv module\n    Defaults to csv.QUOTE_MINIMAL. If you have set a `float_format`\n    then floats are converted to strings and thus csv.QUOTE_NONNUMERIC\n    will treat them as non-numeric.\nquotechar : str, default '\\\"'\n    String of length 1. Character used to quote fields.\nline_terminator : str, optional\n    The newline character or character sequence to use in the output\n    file. Defaults to `os.linesep`, which depends on the OS in which\n    this method is called ('\\\\n' for linux, '\\\\r\\\\n' for Windows, i.e.).\nchunksize : int or None\n    Rows to write at a time.\ndate_format : str, default None\n    Format string for datetime objects.\ndoublequote : bool, default True\n    Control quoting of `quotechar` inside a field.\nescapechar : str, default None\n    String of length 1. Character used to escape `sep` and `quotechar`\n    when appropriate.\ndecimal : str, default '.'\n    Character recognized as decimal separator. E.g. use ',' for\n    European data.\nerrors : str, default 'strict'\n    Specifies how encoding and decoding errors are to be handled.\n    See the errors argument for :func:`open` for a full list\n    of options.\n\n    .. versionadded:: 1.1.0\n\nstorage_options : dict, optional\n    Extra options that make sense for a particular storage connection, e.g.\n    host, port, username, password, etc. For HTTP(S) URLs the key-value pairs\n    are forwarded to ``urllib`` as header options. For other URLs (e.g.\n    starting with \"s3://\", and \"gcs://\") the key-value pairs are forwarded to\n    ``fsspec``. Please see ``fsspec`` and ``urllib`` for more details.\n\n    .. versionadded:: 1.2.0\n\nReturns\n-------\nNone or str\n    If path_or_buf is None, returns the resulting csv format as a\n    string. Otherwise returns None.\n\nSee Also\n--------\nread_csv : Load a CSV file into a DataFrame.\nto_excel : Write DataFrame to an Excel file.\n\nExamples\n--------\n>>> df = pd.DataFrame({'name': ['Raphael', 'Donatello'],\n...                    'mask': ['red', 'purple'],\n...                    'weapon': ['sai', 'bo staff']})\n>>> df.to_csv(index=False)\n'name,mask,weapon\\nRaphael,red,sai\\nDonatello,purple,bo staff\\n'\n\nCreate 'out.zip' containing 'out.csv'\n\n>>> compression_opts = dict(method='zip',\n...                         archive_name='out.csv')  # doctest: +SKIP\n>>> df.to_csv('out.zip', index=False,\n...           compression=compression_opts)  # doctest: +SKIP\nFile:      /usr/local/lib/python3.8/dist-packages/pandas/core/generic.py\nType:      method","pos":21.96875,"type":"cell"}
{"cell_type":"markdown","id":"8fc793","input":"# Relatório de Análise 3","pos":0,"type":"cell"}
{"cell_type":"markdown","id":"9c9b6e","input":"__O que faz o método isin()?__\n\nPassando uma lista com os tipos de imóveis, ele vai verificar dentro do DataFrame   \ne se essa variável tipo tiver um imóvel que está na lista, ele vai marcar este registro     \ncomo verdadeiro, senão, vai retornar falso.","pos":10,"type":"cell"}
{"cell_type":"markdown","id":"a24f97","input":"## Imóveis Residenciais","pos":1,"type":"cell"}
{"cell_type":"markdown","id":"bba0f3","input":"E baseado nesses DataFrame geramos uma seleção para filtrar os dados:","pos":24.5,"type":"cell"}
{"cell_type":"markdown","id":"e0074e","input":"Podemos ver no DF anterior, que ele trouxe uma coluna 'Unnamed'.   \nEla corresponde ao index que criamos anteriormente.   \nEsquecemos de informar que não queríamos salvar esta informação.   \n__Agora vamos corrigir isto:__","pos":21.875,"type":"cell"}
{"cell_type":"markdown","id":"f11ec5","input":"## Fim","pos":27,"type":"cell"}
{"end":1626969923023,"exec_count":18,"id":"c073b8","input":"# Checando o DataFrame criado anteriormente, para comparar\ndados.shape[0]","kernel":"python3","output":{"0":{"data":{"text/plain":"32960"},"exec_count":18}},"pos":18,"start":1626969923017,"state":"done","type":"cell"}
{"end":1626969988352,"exec_count":19,"id":"8e0703","input":"# Reconstruindo o index\ndados_residenciais.index = range(dados_residenciais.shape[0])","kernel":"python3","pos":19,"start":1626969988346,"state":"done","type":"cell"}
{"end":1626969994725,"exec_count":20,"id":"c02a38","input":"dados_residenciais","kernel":"python3","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Tipo</th>\n      <th>Bairro</th>\n      <th>Quartos</th>\n      <th>Vagas</th>\n      <th>Suites</th>\n      <th>Area</th>\n      <th>Valor</th>\n      <th>Condominio</th>\n      <th>IPTU</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Quitinete</td>\n      <td>Copacabana</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>40</td>\n      <td>1700.0</td>\n      <td>500.0</td>\n      <td>60.0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Casa</td>\n      <td>Jardim Botânico</td>\n      <td>2</td>\n      <td>0</td>\n      <td>1</td>\n      <td>100</td>\n      <td>7000.0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Apartamento</td>\n      <td>Centro</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>15</td>\n      <td>800.0</td>\n      <td>390.0</td>\n      <td>20.0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Apartamento</td>\n      <td>Higienópolis</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>48</td>\n      <td>800.0</td>\n      <td>230.0</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>Apartamento</td>\n      <td>Vista Alegre</td>\n      <td>3</td>\n      <td>1</td>\n      <td>0</td>\n      <td>70</td>\n      <td>1200.0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>22575</th>\n      <td>Apartamento</td>\n      <td>Méier</td>\n      <td>2</td>\n      <td>0</td>\n      <td>0</td>\n      <td>70</td>\n      <td>900.0</td>\n      <td>490.0</td>\n      <td>48.0</td>\n    </tr>\n    <tr>\n      <th>22576</th>\n      <td>Quitinete</td>\n      <td>Centro</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>27</td>\n      <td>800.0</td>\n      <td>350.0</td>\n      <td>25.0</td>\n    </tr>\n    <tr>\n      <th>22577</th>\n      <td>Apartamento</td>\n      <td>Jacarepaguá</td>\n      <td>3</td>\n      <td>1</td>\n      <td>2</td>\n      <td>78</td>\n      <td>1800.0</td>\n      <td>800.0</td>\n      <td>40.0</td>\n    </tr>\n    <tr>\n      <th>22578</th>\n      <td>Apartamento</td>\n      <td>São Francisco Xavier</td>\n      <td>2</td>\n      <td>1</td>\n      <td>0</td>\n      <td>48</td>\n      <td>1400.0</td>\n      <td>509.0</td>\n      <td>37.0</td>\n    </tr>\n    <tr>\n      <th>22579</th>\n      <td>Apartamento</td>\n      <td>Leblon</td>\n      <td>2</td>\n      <td>0</td>\n      <td>0</td>\n      <td>70</td>\n      <td>3000.0</td>\n      <td>760.0</td>\n      <td>NaN</td>\n    </tr>\n  </tbody>\n</table>\n<p>22580 rows × 9 columns</p>\n</div>","text/plain":"              Tipo                Bairro  Quartos  Vagas  Suites  Area  \\\n0        Quitinete            Copacabana        1      0       0    40   \n1             Casa       Jardim Botânico        2      0       1   100   \n2      Apartamento                Centro        1      0       0    15   \n3      Apartamento          Higienópolis        1      0       0    48   \n4      Apartamento          Vista Alegre        3      1       0    70   \n...            ...                   ...      ...    ...     ...   ...   \n22575  Apartamento                 Méier        2      0       0    70   \n22576    Quitinete                Centro        0      0       0    27   \n22577  Apartamento           Jacarepaguá        3      1       2    78   \n22578  Apartamento  São Francisco Xavier        2      1       0    48   \n22579  Apartamento                Leblon        2      0       0    70   \n\n        Valor  Condominio  IPTU  \n0      1700.0       500.0  60.0  \n1      7000.0         NaN   NaN  \n2       800.0       390.0  20.0  \n3       800.0       230.0   NaN  \n4      1200.0         NaN   NaN  \n...       ...         ...   ...  \n22575   900.0       490.0  48.0  \n22576   800.0       350.0  25.0  \n22577  1800.0       800.0  40.0  \n22578  1400.0       509.0  37.0  \n22579  3000.0       760.0   NaN  \n\n[22580 rows x 9 columns]"},"exec_count":20}},"pos":20,"start":1626969994698,"state":"done","type":"cell"}
{"end":1626970353149,"exec_count":22,"id":"639348","input":"import pandas as pd\n\nnumeros = [i for i in range(11)]\nletras = [chr(i + 65) for i in range (11)]\nnome_coluna = ['N']\n\ndf = pd.DataFrame(data = numeros, index = letras, columns = nome_coluna)\ndf","kernel":"python3","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>N</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>A</th>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>B</th>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>C</th>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>D</th>\n      <td>3</td>\n    </tr>\n    <tr>\n      <th>E</th>\n      <td>4</td>\n    </tr>\n    <tr>\n      <th>F</th>\n      <td>5</td>\n    </tr>\n    <tr>\n      <th>G</th>\n      <td>6</td>\n    </tr>\n    <tr>\n      <th>H</th>\n      <td>7</td>\n    </tr>\n    <tr>\n      <th>I</th>\n      <td>8</td>\n    </tr>\n    <tr>\n      <th>J</th>\n      <td>9</td>\n    </tr>\n    <tr>\n      <th>K</th>\n      <td>10</td>\n    </tr>\n  </tbody>\n</table>\n</div>","text/plain":"    N\nA   0\nB   1\nC   2\nD   3\nE   4\nF   5\nG   6\nH   7\nI   8\nJ   9\nK  10"},"exec_count":22}},"pos":24,"start":1626970353140,"state":"done","type":"cell"}
{"end":1626970853026,"exec_count":24,"id":"68924b","input":"# Exportando e salvando o DataFrame em .csv, com os dados dos imóveis residenciais para reutilizá-lo em outros projetos\ndados_residenciais.to_csv('dados/aluguel_residencial.csv', sep = ';')","kernel":"python3","pos":21,"start":1626970852932,"state":"done","type":"cell"}
{"end":1626971109279,"exec_count":27,"id":"88ffcc","input":"# Importando o novo csv criado\ndados_residenciais_2 = pd.read_csv('dados/aluguel_residencial.csv', sep = ';')","kernel":"python3","pos":21.5,"start":1626971109248,"state":"done","type":"cell"}
{"end":1626971110046,"exec_count":28,"id":"06a4c8","input":"dados_residenciais_2","kernel":"python3","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Unnamed: 0</th>\n      <th>Tipo</th>\n      <th>Bairro</th>\n      <th>Quartos</th>\n      <th>Vagas</th>\n      <th>Suites</th>\n      <th>Area</th>\n      <th>Valor</th>\n      <th>Condominio</th>\n      <th>IPTU</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>0</td>\n      <td>Quitinete</td>\n      <td>Copacabana</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>40</td>\n      <td>1700.0</td>\n      <td>500.0</td>\n      <td>60.0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1</td>\n      <td>Casa</td>\n      <td>Jardim Botânico</td>\n      <td>2</td>\n      <td>0</td>\n      <td>1</td>\n      <td>100</td>\n      <td>7000.0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>2</td>\n      <td>Apartamento</td>\n      <td>Centro</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>15</td>\n      <td>800.0</td>\n      <td>390.0</td>\n      <td>20.0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>3</td>\n      <td>Apartamento</td>\n      <td>Higienópolis</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>48</td>\n      <td>800.0</td>\n      <td>230.0</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>4</td>\n      <td>Apartamento</td>\n      <td>Vista Alegre</td>\n      <td>3</td>\n      <td>1</td>\n      <td>0</td>\n      <td>70</td>\n      <td>1200.0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>22575</th>\n      <td>22575</td>\n      <td>Apartamento</td>\n      <td>Méier</td>\n      <td>2</td>\n      <td>0</td>\n      <td>0</td>\n      <td>70</td>\n      <td>900.0</td>\n      <td>490.0</td>\n      <td>48.0</td>\n    </tr>\n    <tr>\n      <th>22576</th>\n      <td>22576</td>\n      <td>Quitinete</td>\n      <td>Centro</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>27</td>\n      <td>800.0</td>\n      <td>350.0</td>\n      <td>25.0</td>\n    </tr>\n    <tr>\n      <th>22577</th>\n      <td>22577</td>\n      <td>Apartamento</td>\n      <td>Jacarepaguá</td>\n      <td>3</td>\n      <td>1</td>\n      <td>2</td>\n      <td>78</td>\n      <td>1800.0</td>\n      <td>800.0</td>\n      <td>40.0</td>\n    </tr>\n    <tr>\n      <th>22578</th>\n      <td>22578</td>\n      <td>Apartamento</td>\n      <td>São Francisco Xavier</td>\n      <td>2</td>\n      <td>1</td>\n      <td>0</td>\n      <td>48</td>\n      <td>1400.0</td>\n      <td>509.0</td>\n      <td>37.0</td>\n    </tr>\n    <tr>\n      <th>22579</th>\n      <td>22579</td>\n      <td>Apartamento</td>\n      <td>Leblon</td>\n      <td>2</td>\n      <td>0</td>\n      <td>0</td>\n      <td>70</td>\n      <td>3000.0</td>\n      <td>760.0</td>\n      <td>NaN</td>\n    </tr>\n  </tbody>\n</table>\n<p>22580 rows × 10 columns</p>\n</div>","text/plain":"       Unnamed: 0         Tipo                Bairro  Quartos  Vagas  Suites  \\\n0               0    Quitinete            Copacabana        1      0       0   \n1               1         Casa       Jardim Botânico        2      0       1   \n2               2  Apartamento                Centro        1      0       0   \n3               3  Apartamento          Higienópolis        1      0       0   \n4               4  Apartamento          Vista Alegre        3      1       0   \n...           ...          ...                   ...      ...    ...     ...   \n22575       22575  Apartamento                 Méier        2      0       0   \n22576       22576    Quitinete                Centro        0      0       0   \n22577       22577  Apartamento           Jacarepaguá        3      1       2   \n22578       22578  Apartamento  São Francisco Xavier        2      1       0   \n22579       22579  Apartamento                Leblon        2      0       0   \n\n       Area   Valor  Condominio  IPTU  \n0        40  1700.0       500.0  60.0  \n1       100  7000.0         NaN   NaN  \n2        15   800.0       390.0  20.0  \n3        48   800.0       230.0   NaN  \n4        70  1200.0         NaN   NaN  \n...     ...     ...         ...   ...  \n22575    70   900.0       490.0  48.0  \n22576    27   800.0       350.0  25.0  \n22577    78  1800.0       800.0  40.0  \n22578    48  1400.0       509.0  37.0  \n22579    70  3000.0       760.0   NaN  \n\n[22580 rows x 10 columns]"},"exec_count":28}},"pos":21.75,"start":1626971110031,"state":"done","type":"cell"}
{"end":1626971746116,"exec_count":44,"id":"8686e8","input":"dados_residenciais_2","kernel":"python3","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Tipo</th>\n      <th>Bairro</th>\n      <th>Quartos</th>\n      <th>Vagas</th>\n      <th>Suites</th>\n      <th>Area</th>\n      <th>Valor</th>\n      <th>Condominio</th>\n      <th>IPTU</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Quitinete</td>\n      <td>Copacabana</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>40</td>\n      <td>1700.0</td>\n      <td>500.0</td>\n      <td>60.0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Casa</td>\n      <td>Jardim Botânico</td>\n      <td>2</td>\n      <td>0</td>\n      <td>1</td>\n      <td>100</td>\n      <td>7000.0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Apartamento</td>\n      <td>Centro</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>15</td>\n      <td>800.0</td>\n      <td>390.0</td>\n      <td>20.0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Apartamento</td>\n      <td>Higienópolis</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>48</td>\n      <td>800.0</td>\n      <td>230.0</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>Apartamento</td>\n      <td>Vista Alegre</td>\n      <td>3</td>\n      <td>1</td>\n      <td>0</td>\n      <td>70</td>\n      <td>1200.0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>22575</th>\n      <td>Apartamento</td>\n      <td>Méier</td>\n      <td>2</td>\n      <td>0</td>\n      <td>0</td>\n      <td>70</td>\n      <td>900.0</td>\n      <td>490.0</td>\n      <td>48.0</td>\n    </tr>\n    <tr>\n      <th>22576</th>\n      <td>Quitinete</td>\n      <td>Centro</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>27</td>\n      <td>800.0</td>\n      <td>350.0</td>\n      <td>25.0</td>\n    </tr>\n    <tr>\n      <th>22577</th>\n      <td>Apartamento</td>\n      <td>Jacarepaguá</td>\n      <td>3</td>\n      <td>1</td>\n      <td>2</td>\n      <td>78</td>\n      <td>1800.0</td>\n      <td>800.0</td>\n      <td>40.0</td>\n    </tr>\n    <tr>\n      <th>22578</th>\n      <td>Apartamento</td>\n      <td>São Francisco Xavier</td>\n      <td>2</td>\n      <td>1</td>\n      <td>0</td>\n      <td>48</td>\n      <td>1400.0</td>\n      <td>509.0</td>\n      <td>37.0</td>\n    </tr>\n    <tr>\n      <th>22579</th>\n      <td>Apartamento</td>\n      <td>Leblon</td>\n      <td>2</td>\n      <td>0</td>\n      <td>0</td>\n      <td>70</td>\n      <td>3000.0</td>\n      <td>760.0</td>\n      <td>NaN</td>\n    </tr>\n  </tbody>\n</table>\n<p>22580 rows × 9 columns</p>\n</div>","text/plain":"              Tipo                Bairro  Quartos  Vagas  Suites  Area  \\\n0        Quitinete            Copacabana        1      0       0    40   \n1             Casa       Jardim Botânico        2      0       1   100   \n2      Apartamento                Centro        1      0       0    15   \n3      Apartamento          Higienópolis        1      0       0    48   \n4      Apartamento          Vista Alegre        3      1       0    70   \n...            ...                   ...      ...    ...     ...   ...   \n22575  Apartamento                 Méier        2      0       0    70   \n22576    Quitinete                Centro        0      0       0    27   \n22577  Apartamento           Jacarepaguá        3      1       2    78   \n22578  Apartamento  São Francisco Xavier        2      1       0    48   \n22579  Apartamento                Leblon        2      0       0    70   \n\n        Valor  Condominio  IPTU  \n0      1700.0       500.0  60.0  \n1      7000.0         NaN   NaN  \n2       800.0       390.0  20.0  \n3       800.0       230.0   NaN  \n4      1200.0         NaN   NaN  \n...       ...         ...   ...  \n22575   900.0       490.0  48.0  \n22576   800.0       350.0  25.0  \n22577  1800.0       800.0  40.0  \n22578  1400.0       509.0  37.0  \n22579  3000.0       760.0   NaN  \n\n[22580 rows x 9 columns]"},"exec_count":44}},"pos":21.99609375,"start":1626971746100,"state":"done","type":"cell"}
{"exec_count":16,"id":"97661a","input":"# Checando o tamanho do DataFrame, quantos dados tem nele\ndados_residenciais.shape[0]","kernel":"python3","output":{"0":{"data":{"text/plain":"22580"},"exec_count":16}},"pos":17,"state":"done","type":"cell"}
{"exec_count":42,"id":"d53276","input":"# Vimos que por default o index vem como True. Precisamos indicá-lo como False\n# E exportar novamente nossa base\ndados_residenciais.to_csv('dados/aluguel_residencial.csv', sep = ';', index = False)","kernel":"python3","pos":21.984375,"state":"done","type":"cell"}
{"exec_count":43,"id":"53ac8f","input":"# Fazendo a leitura da base de dados salva\ndados_residenciais_2 = pd.read_csv('dados/aluguel_residencial.csv', sep = ';')","kernel":"python3","pos":21.9921875,"state":"done","type":"cell"}
{"id":"da9b2e","input":"#dados_residenciais.to_csv('dados/aluguel_residencial.csv', sep = ';')","pos":21.9375,"type":"cell"}
{"id":0,"time":1626930115760,"type":"user"}
{"last_load":1626969369268,"type":"file"}